'use strict';

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _enzyme = require('enzyme');

var _icon = require('./../icon');

var _icon2 = _interopRequireDefault(_icon);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

describe('<Icon/>', function () {
    it('should return the icon passed', function () {
        var component = (0, _enzyme.mount)(_react2.default.createElement(_icon2.default, { icon: _react2.default.createElement('svg', { 'data-id': 'custom-icon' }) }));
        expect(component.find('svg[data-id="custom-icon"]').exists()).toBe(true);
    });
    it('should render the fallback icon when no icon is passed', function () {
        var component = (0, _enzyme.mount)(_react2.default.createElement(_icon2.default, null));
        expect(component.find('span.rainbow-google-map-marker_icon').exists()).toBe(true);
        expect(component.find('MarkerIcon').exists()).toBe(true);
    });
    it('should set the same text as title in span element and text in AssistiveText when no icon is passed', function () {
        var component = (0, _enzyme.mount)(_react2.default.createElement(_icon2.default, null));
        expect(component.find('span.rainbow-google-map-marker_icon').prop('title')).toBe('marker icon');
        expect(component.find('AssistiveText').prop('text')).toBe('marker icon');
    });
});
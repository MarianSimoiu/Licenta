'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _context = require('../Sidebar/context');

var _RenderIf = require('../RenderIf');

var _RenderIf2 = _interopRequireDefault(_RenderIf);

require('./styles.css');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @category Layout
 */
/* eslint-disable no-script-url, react/prop-types */
function SidebarItem(props) {
    var label = props.label,
        icon = props.icon,
        name = props.name,
        href = props.href,
        onClick = props.onClick,
        className = props.className,
        style = props.style,
        selectedItem = props.selectedItem,
        onSelect = props.onSelect;

    var isSelected = name === selectedItem;

    var getContainerClassNames = function getContainerClassNames() {
        return (0, _classnames2.default)('rainbow-sidebar-item', {
            'rainbow-sidebar-item--active': isSelected
        }, className);
    };

    var getAriaCurrent = function getAriaCurrent() {
        if (isSelected) {
            return 'page';
        }
        return undefined;
    };

    function hanldeOnClick(event) {
        onClick(event);
        onSelect(event, name);
    }

    return _react2.default.createElement(
        'li',
        { className: getContainerClassNames(), style: style },
        _react2.default.createElement(
            'a',
            {
                href: href,
                onClick: hanldeOnClick,
                className: 'rainbow-sidebar-item_action',
                'aria-current': getAriaCurrent()
            },
            _react2.default.createElement(
                'div',
                { className: 'rainbow-sidebar-item_icon' },
                icon
            ),
            _react2.default.createElement(
                _RenderIf2.default,
                { isTrue: !!label },
                _react2.default.createElement(
                    'span',
                    { className: 'rainbow-sidebar-item_label' },
                    label
                )
            )
        )
    );
}

SidebarItem.propTypes = {
    /** A unique identifier for the navigation item. */
    name: _propTypes2.default.string.isRequired,
    /** The text to show if it is passed. The text displayed for the SidebarItem. */
    label: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.node]),
    /** The icon displayed for the SidebarItem. It must be a svg icon or a font icon. */
    icon: _propTypes2.default.node.isRequired,
    /** The URL of the page that the navigation item goes to. */
    href: _propTypes2.default.string,
    /** Event fired when the item is clicked. */
    onClick: _propTypes2.default.func,
    /** A CSS class for the outer element, in addition to the component's base classes. */
    className: _propTypes2.default.string,
    /** An object with custom style applied for the outer element. */
    style: _propTypes2.default.object
};

SidebarItem.defaultProps = {
    label: '',
    href: 'javascript:void(0);',
    onClick: function onClick() {},
    className: undefined,
    style: undefined
};

exports.default = (0, _context.withContext)(SidebarItem);
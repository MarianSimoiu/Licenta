'use strict';

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _enzyme = require('enzyme');

var _checkbox = require('../checkbox');

var _checkbox2 = _interopRequireDefault(_checkbox);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

describe('<CheckBox />', function () {
    it('it should set the right type to the input', function () {
        var component = (0, _enzyme.mount)(_react2.default.createElement(_checkbox2.default, { value: 'test', label: 'test' }));
        expect(component.find('input[type="checkbox"]').exists()).toBe(true);
    });

    it('it should set the checked prop to the input', function () {
        var component = (0, _enzyme.mount)(_react2.default.createElement(_checkbox2.default, { value: 'test', label: 'test', isSelected: true }));
        expect(component.find('input').prop('checked')).toBe(true);
    });

    it('should pass a generated id to the input element and set the same id to the htmFor of the label element', function () {
        var component = (0, _enzyme.mount)(_react2.default.createElement(_checkbox2.default, null));
        expect(component.find('input').prop('id')).toMatch(/checkbox/);
        expect(component.find('label').prop('htmlFor')).toMatch(/checkbox/);
    });

    it('should set the value passed to the value prop of the input element', function () {
        var component = (0, _enzyme.mount)(_react2.default.createElement(_checkbox2.default, { value: 'value-1' }));
        expect(component.find('input').prop('value')).toBe('value-1');
    });

    it('should set the isSelected passed to the checked prop of the input element', function () {
        var component = (0, _enzyme.mount)(_react2.default.createElement(_checkbox2.default, { isSelected: true }));
        expect(component.find('input').prop('checked')).toBe(true);
    });

    it('should set the value ariaDescribedby to the ariaDescribedby prop of the input element', function () {
        var component = (0, _enzyme.mount)(_react2.default.createElement(_checkbox2.default, { describedBy: 'error-1' }));
        expect(component.find('input').prop('aria-describedby')).toBe('error-1');
    });

    it('it should set the disabled prop to the input', function () {
        var component = (0, _enzyme.mount)(_react2.default.createElement(_checkbox2.default, { value: 'test', label: 'test', disabled: true }));
        expect(component.find('input').prop('disabled')).toBe(true);
    });

    it('it should call onChange when the input is clicked', function () {
        var onChangeMockFn = jest.fn();
        var component = (0, _enzyme.mount)(_react2.default.createElement(_checkbox2.default, { value: 'test', label: 'test', onChange: onChangeMockFn }));
        var input = component.find('input');
        input.simulate('change');
        expect(onChangeMockFn.mock.calls.length).toBe(1);
    });

    it('should have the right classNames when in the span element of the label when is disabled', function () {
        var component = (0, _enzyme.mount)(_react2.default.createElement(_checkbox2.default, { label: 'checkbox label', disabled: true }));
        expect(component.find('span[className="rainbow-checkbox-group_checkbox-label rainbow-checkbox-group_checkbox-label--disabled"]').exists()).toBe(true);
    });
});
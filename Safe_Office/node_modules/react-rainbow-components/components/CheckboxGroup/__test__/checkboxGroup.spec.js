'use strict';

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _enzyme = require('enzyme');

var _index = require('../index');

var _index2 = _interopRequireDefault(_index);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var options = [{ value: 'admin', label: 'Admin', disabled: false }, { value: 'user', label: 'User', disabled: false }, { value: 'nobody', label: 'Anonymus', disabled: true }];

describe('<CheckboxGroup />', function () {
    it('should set the right classNames when error is passed', function () {
        var component = (0, _enzyme.mount)(_react2.default.createElement(_index2.default, { options: options, error: true }));

        expect(component.find('fieldset.rainbow-checkbox-group_container.rainbow-checkbox-group--error').exists()).toBe(true);
    });

    it('should set the right classNames when custom classes are passed', function () {
        var component = (0, _enzyme.mount)(_react2.default.createElement(_index2.default, { options: options, className: 'custom-class-name' }));

        expect(component.find('fieldset.rainbow-checkbox-group_container.custom-class-name').exists()).toBe(true);
    });

    it('should set an empty array when the values passed is a "string"', function () {
        var component = (0, _enzyme.mount)(_react2.default.createElement(_index2.default, { value: 'admin', className: 'custom-class-name' }));

        var checkbox = component.find('CheckboxList');
        expect(checkbox.prop('values')).toEqual([]);
    });

    it('should set the right values when the values passed is not a "string"', function () {
        var component = (0, _enzyme.mount)(_react2.default.createElement(_index2.default, { value: ['admin', 'user-1'], className: 'custom-class-name' }));

        var checkbox = component.find('CheckboxList');
        expect(checkbox.prop('values')).toEqual(['admin', 'user-1']);
    });
});
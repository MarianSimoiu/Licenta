'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = Chip;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _closeIcon = require('./closeIcon');

var _closeIcon2 = _interopRequireDefault(_closeIcon);

var _ButtonIcon = require('./../ButtonIcon');

var _ButtonIcon2 = _interopRequireDefault(_ButtonIcon);

var _RenderIf = require('../RenderIf');

var _RenderIf2 = _interopRequireDefault(_RenderIf);

require('./styles.css');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * A Chip displays a label that can be removed from view.
 */
function Chip(props) {
    var label = props.label,
        onDelete = props.onDelete,
        variant = props.variant,
        title = props.title,
        className = props.className,
        style = props.style;


    var getVariantClassNames = function getVariantClassNames() {
        if (variant === 'base') {
            return null;
        }
        return 'rainbow-chip--' + variant;
    };

    var getContainerClassName = function getContainerClassName() {
        return (0, _classnames2.default)('rainbow-chip', getVariantClassNames(), className);
    };

    return _react2.default.createElement(
        'span',
        { className: getContainerClassName(), style: style, title: title },
        _react2.default.createElement(
            'span',
            { className: 'rainbow-chip_content--truncate' },
            label
        ),
        _react2.default.createElement(
            _RenderIf2.default,
            { isTrue: !!onDelete },
            _react2.default.createElement(_ButtonIcon2.default, {
                className: 'rainbow-chip_button-container',
                icon: _react2.default.createElement(_closeIcon2.default, null),
                size: 'small',
                title: 'Close',
                onClick: onDelete,
                assistiveText: 'Remove'
            })
        )
    );
}

Chip.propTypes = {
    /** The content to be displayed inside the Chip. */
    label: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.node]),
    /** Displays tooltip text when the mouse moves over the element. */
    title: _propTypes2.default.string,
    /** The variant changes the appearance of the Chip. Accepted variants include base,
     * neutral, outline-brand and brand. This value defaults to base. */
    variant: _propTypes2.default.oneOf(['base', 'neutral', 'outline-brand', 'brand']),
    /** The action triggered when the close button is clicked. */
    onDelete: _propTypes2.default.func,
    /** A CSS class for the outer element, in addition to the component's base classes. */
    className: _propTypes2.default.string,
    /** An object with custom style applied to the outer element. */
    style: _propTypes2.default.object
};

Chip.defaultProps = {
    label: null,
    title: undefined,
    variant: 'base',
    onDelete: undefined,
    className: undefined,
    style: undefined
};
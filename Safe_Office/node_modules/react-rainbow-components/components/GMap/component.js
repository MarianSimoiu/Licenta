'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _RenderIf = require('./../RenderIf');

var _RenderIf2 = _interopRequireDefault(_RenderIf);

var _header = require('./header');

var _header2 = _interopRequireDefault(_header);

var _context = require('./context');

var _getMapContainerStyles = require('./getMapContainerStyles');

var _getMapContainerStyles2 = _interopRequireDefault(_getMapContainerStyles);

require('./styles.css');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var currentInfoWindow = Symbol('currentInfoWindow');

var MapComponent = function (_Component) {
    _inherits(MapComponent, _Component);

    function MapComponent(props) {
        _classCallCheck(this, MapComponent);

        var _this = _possibleConstructorReturn(this, (MapComponent.__proto__ || Object.getPrototypeOf(MapComponent)).call(this, props));

        _this.container = _react2.default.createRef();
        _this.mapContainer = _react2.default.createRef();
        _this.initMap = _this.initMap.bind(_this);
        _this.selectMarker = _this.selectMarker.bind(_this);
        _this.toggleInfoWindow = _this.toggleInfoWindow.bind(_this);
        _this[currentInfoWindow] = null;

        _this.state = {
            privateOnClick: _this.selectMarker,
            privateMarkerClick: _this.toggleInfoWindow
        };
        return _this;
    }

    _createClass(MapComponent, [{
        key: 'componentDidUpdate',
        value: function componentDidUpdate(_ref) {
            var prevIsScriptLoaded = _ref.isScriptLoaded;
            var _props = this.props,
                isScriptLoaded = _props.isScriptLoaded,
                isScriptLoadSucceed = _props.isScriptLoadSucceed;

            if (!prevIsScriptLoaded && isScriptLoaded && isScriptLoadSucceed) {
                this.initMap();
            }
        }
    }, {
        key: 'getContainerClassNames',
        value: function getContainerClassNames() {
            var className = this.props.className;

            return (0, _classnames2.default)('rainbow-google-map', className);
        }
    }, {
        key: 'initMap',
        value: function initMap() {
            var _props2 = this.props,
                zoom = _props2.zoom,
                latitude = _props2.latitude,
                longitude = _props2.longitude;


            var map = new window.google.maps.Map(this.mapContainer.current, {
                center: {
                    lat: latitude,
                    lng: longitude
                },
                zoom: zoom,
                fullscreenControl: false
            });
            var geocoder = new window.google.maps.Geocoder();
            this.setState({ map: map, geocoder: geocoder });
        }
    }, {
        key: 'selectMarker',
        value: function selectMarker(name, position) {
            var map = this.state.map;


            this.setState({
                selectedMarker: name
            });
            map.panTo(position);
        }
    }, {
        key: 'toggleInfoWindow',
        value: function toggleInfoWindow(infowindow, marker) {
            var map = this.state.map;

            if (this[currentInfoWindow] === null) {
                this[currentInfoWindow] = infowindow;
                return infowindow.open(map, marker);
            }
            if (this[currentInfoWindow] && this[currentInfoWindow].content !== infowindow.content) {
                this[currentInfoWindow].close(map, marker);
                this[currentInfoWindow] = infowindow;
                return infowindow.open(map, marker);
            }
            this[currentInfoWindow].close(map, marker);
            this[currentInfoWindow] = null;
            return null;
        }
    }, {
        key: 'render',
        value: function render() {
            var _props3 = this.props,
                header = _props3.header,
                children = _props3.children,
                style = _props3.style;


            return _react2.default.createElement(
                'div',
                { className: this.getContainerClassNames(), style: style, ref: this.container },
                _react2.default.createElement('div', {
                    ref: this.mapContainer,
                    style: (0, _getMapContainerStyles2.default)(this.container.current),
                    className: 'rainbow-google-map_map-container'
                }),
                _react2.default.createElement(
                    'div',
                    { className: 'rainbow-google-map_coordinates-container' },
                    _react2.default.createElement(
                        _RenderIf2.default,
                        { isTrue: !!header },
                        _react2.default.createElement(_header2.default, { text: header })
                    ),
                    _react2.default.createElement(
                        'ul',
                        null,
                        _react2.default.createElement(
                            _context.Provider,
                            { value: this.state },
                            children
                        )
                    )
                )
            );
        }
    }]);

    return MapComponent;
}(_react.Component);

exports.default = MapComponent;


MapComponent.propTypes = {
    isScriptLoaded: _propTypes2.default.bool.isRequired,
    isScriptLoadSucceed: _propTypes2.default.bool.isRequired,
    latitude: _propTypes2.default.number.isRequired,
    longitude: _propTypes2.default.number.isRequired,
    zoom: _propTypes2.default.number.isRequired,
    header: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.node]),
    children: _propTypes2.default.oneOfType([_propTypes2.default.arrayOf(_propTypes2.default.node), _propTypes2.default.object]),
    className: _propTypes2.default.string,
    style: _propTypes2.default.object
};

MapComponent.defaultProps = {
    header: undefined,
    children: null,
    className: undefined,
    style: undefined
};
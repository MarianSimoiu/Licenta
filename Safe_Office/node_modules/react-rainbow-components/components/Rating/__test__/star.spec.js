'use strict';

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _enzyme = require('enzyme');

var _star = require('../star');

var _star2 = _interopRequireDefault(_star);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

describe('<Star />', function () {
    it('should set type radio to the input element', function () {
        var component = (0, _enzyme.mount)(_react2.default.createElement(_star2.default, null));
        expect(component.find('input').prop('type')).toBe('radio');
    });
    it('should pass a generated id to the input element and set the same id to the htmFor of the label element', function () {
        var component = (0, _enzyme.mount)(_react2.default.createElement(_star2.default, null));
        expect(component.find('input').prop('id')).toMatch(/star/);
        expect(component.find('label').prop('htmlFor')).toMatch(/star/);
    });
    it('should set the name passed to the name prop of the input element', function () {
        var component = (0, _enzyme.mount)(_react2.default.createElement(_star2.default, { name: 'name-1' }));
        expect(component.find('input').prop('name')).toBe('name-1');
    });
    it('should set the value passed to the value prop of the input element', function () {
        var component = (0, _enzyme.mount)(_react2.default.createElement(_star2.default, { value: 'value-1' }));
        expect(component.find('input').prop('value')).toBe('value-1');
    });
    it('should fire an event when the user click the star', function () {
        var onChangeFn = jest.fn();
        var component = (0, _enzyme.mount)(_react2.default.createElement(_star2.default, { onChange: onChangeFn }));
        component.find('input').simulate('change');
        expect(onChangeFn).toHaveBeenCalledTimes(1);
    });
    it('should render the StarFill when the prop filled is true', function () {
        var component = (0, _enzyme.mount)(_react2.default.createElement(_star2.default, { filled: true }));
        component.find('input').simulate('change');
        expect(component.find('StarFill').exists()).toBe(true);
    });
    it('should render the StarBordered when the prop filled is false', function () {
        var component = (0, _enzyme.mount)(_react2.default.createElement(_star2.default, { filled: false }));
        component.find('input').simulate('change');
        expect(component.find('StarBordered').exists()).toBe(true);
    });
    it('should pass the right text to the AssistiveText component', function () {
        var component = (0, _enzyme.mount)(_react2.default.createElement(_star2.default, { value: 1 }));
        expect(component.find('AssistiveText').prop('text')).toBe('1 Star');
    });
});
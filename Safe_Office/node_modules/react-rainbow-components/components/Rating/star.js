'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _AssistiveText = require('../AssistiveText');

var _AssistiveText2 = _interopRequireDefault(_AssistiveText);

var _utils = require('../../libs/utils');

var _starFill = require('./starFill');

var _starFill2 = _interopRequireDefault(_starFill);

var _starBordered = require('./starBordered');

var _starBordered2 = _interopRequireDefault(_starBordered);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Star = function (_Component) {
    _inherits(Star, _Component);

    function Star(props) {
        _classCallCheck(this, Star);

        var _this = _possibleConstructorReturn(this, (Star.__proto__ || Object.getPrototypeOf(Star)).call(this, props));

        _this.starId = (0, _utils.uniqueId)('star');
        return _this;
    }

    _createClass(Star, [{
        key: 'getAssitiveText',
        value: function getAssitiveText() {
            var value = this.props.value;

            if (value === 1) {
                return value + ' Star';
            }
            return value + ' Stars';
        }
    }, {
        key: 'renderStar',
        value: function renderStar() {
            var filled = this.props.filled;

            if (filled) {
                return _react2.default.createElement(_starFill2.default, null);
            }
            return _react2.default.createElement(_starBordered2.default, null);
        }
    }, {
        key: 'render',
        value: function render() {
            var _props = this.props,
                onChange = _props.onChange,
                value = _props.value,
                name = _props.name;


            return _react2.default.createElement(
                'span',
                { className: 'rainbow-rating_star' },
                _react2.default.createElement('input', {
                    className: 'rainbow-rating_star-input',
                    type: 'radio',
                    id: this.starId,
                    value: value,
                    name: name,
                    onChange: onChange
                }),
                _react2.default.createElement(
                    'label',
                    { htmlFor: this.starId },
                    this.renderStar(),
                    _react2.default.createElement(_AssistiveText2.default, { text: this.getAssitiveText() })
                )
            );
        }
    }]);

    return Star;
}(_react.Component);

exports.default = Star;


Star.propTypes = {
    value: _propTypes2.default.number,
    onChange: _propTypes2.default.func,
    filled: _propTypes2.default.bool.isRequired,
    name: _propTypes2.default.string
};

Star.defaultProps = {
    value: 1,
    onChange: function onChange() {},
    name: undefined
};
'use strict';

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _enzyme = require('enzyme');

var _animationButton = require('../animationButton');

var _animationButton2 = _interopRequireDefault(_animationButton);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

describe('<AnimationButtom />', function () {
    it('should set the right assistive text', function () {
        var component = (0, _enzyme.mount)(_react2.default.createElement(_animationButton2.default, { isAnimationPaused: true }));

        expect(component.find('ButtonIcon').prop('assistiveText')).toBe('Start auto-play');
    });

    it('should set the right assistive text', function () {
        var component = (0, _enzyme.mount)(_react2.default.createElement(_animationButton2.default, { isAnimationPaused: false }));

        expect(component.find('ButtonIcon').prop('assistiveText')).toBe('Stop auto-play');
    });

    it('should set the right aria-pressed value', function () {
        var component = (0, _enzyme.mount)(_react2.default.createElement(_animationButton2.default, { isAnimationPaused: true }));

        expect(component.find('ButtonIcon').prop('ariaPressed')).toBe(true);
    });

    it('should show the play icon', function () {
        var component = (0, _enzyme.mount)(_react2.default.createElement(_animationButton2.default, null));

        expect(component.find('PlayIcon').exists()).toBe(true);
    });

    it('should show the pause icon when isAnimationPaused is false', function () {
        var component = (0, _enzyme.mount)(_react2.default.createElement(_animationButton2.default, { isAnimationPaused: false }));

        expect(component.find('PauseIcon').exists()).toBe(true);
    });

    it('should call the function passed in onClick', function () {
        var onClickMockFn = jest.fn();
        var component = (0, _enzyme.mount)(_react2.default.createElement(_animationButton2.default, { onClick: onClickMockFn }));
        component.find('ButtonIcon').simulate('click');

        expect(onClickMockFn).toHaveBeenCalledTimes(1);
    });
});
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = ButtonGroup;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

require('./styles.css');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Button groups are used to bunch together buttons with similar actions
 */
function ButtonGroup(props) {
    var className = props.className,
        style = props.style,
        children = props.children;

    var getContainerClassName = function getContainerClassName() {
        return (0, _classnames2.default)('rainbow-button-group', className);
    };

    return _react2.default.createElement(
        'div',
        { className: getContainerClassName(), style: style, role: 'group' },
        children
    );
}

ButtonGroup.propTypes = {
    /** The content of the ButtonGroup.
     * Accepted childrens include Button, ButtonIcon and ButtonMenu. */
    children: _propTypes2.default.oneOfType([_propTypes2.default.arrayOf(_propTypes2.default.node), _propTypes2.default.object]),
    /** A CSS class for the outer element, in addition to the component's base classes. */
    className: _propTypes2.default.string,
    /** An object with custom style applied to the outer element. */
    style: _propTypes2.default.object
};

ButtonGroup.defaultProps = {
    children: null,
    className: undefined,
    style: undefined
};
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = Spinner;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _AssistiveText = require('./../AssistiveText');

var _AssistiveText2 = _interopRequireDefault(_AssistiveText);

require('./styles.css');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Spinners should be shown when retrieving data or performing slow,
 * help to reassure the user that the system is actively retrieving data.
 */
function Spinner(props) {
    var className = props.className,
        style = props.style,
        assistiveText = props.assistiveText,
        isVisible = props.isVisible,
        size = props.size,
        variant = props.variant;

    var getVariantClassNames = function getVariantClassNames() {
        if (variant === 'base') {
            return '';
        }
        return 'rainbow-spinner--' + variant;
    };

    var getContainerClassNames = function getContainerClassNames() {
        return (0, _classnames2.default)('rainbow-spinner', 'rainbow-spinner--' + size, getVariantClassNames(), className);
    };

    if (isVisible) {
        return _react2.default.createElement(
            'div',
            { className: getContainerClassNames(), style: style },
            _react2.default.createElement('div', null),
            _react2.default.createElement('div', null),
            _react2.default.createElement('div', null),
            _react2.default.createElement('div', null),
            _react2.default.createElement('div', null),
            _react2.default.createElement('div', null),
            _react2.default.createElement('div', null),
            _react2.default.createElement('div', null),
            _react2.default.createElement(_AssistiveText2.default, { text: assistiveText })
        );
    }
    return null;
}

Spinner.propTypes = {
    /** The variant changes the appearance of the spinner.
     * Accepted variants are base, brand, and inverse. This value defaults to base. */
    variant: _propTypes2.default.oneOf(['base', 'brand', 'inverse', 'neutral']),
    /** The size of the spinner. Accepted sizes are small, medium, and large.
     * This value defaults to medium. */
    size: _propTypes2.default.oneOf(['xx-small', 'x-small', 'small', 'medium', 'large']),
    /** Show/Hide the spinner. */
    isVisible: _propTypes2.default.bool,
    /** A description for assistive sreen readers. */
    assistiveText: _propTypes2.default.string,
    /** A CSS class for the outer element, in addition to the component's base classes. */
    className: _propTypes2.default.string,
    /** An object with custom style applied to the outer element. */
    style: _propTypes2.default.object
};

Spinner.defaultProps = {
    variant: 'base',
    size: 'medium',
    isVisible: true,
    assistiveText: null,
    className: undefined,
    style: undefined
};
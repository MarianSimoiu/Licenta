'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = SelectableHeader;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _InputCheckbox = require('./InputCheckbox');

var _InputCheckbox2 = _interopRequireDefault(_InputCheckbox);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function SelectableHeader(props) {
    var onSelectAllRows = props.onSelectAllRows,
        onDeselectAllRows = props.onDeselectAllRows,
        tableId = props.tableId,
        maxRowSelection = props.maxRowSelection,
        bulkSelection = props.bulkSelection,
        style = props.style;

    var name = tableId + '-options';
    var isDisabled = maxRowSelection === 0;
    var isRadio = maxRowSelection === 1;
    var isIndeterminate = bulkSelection === 'some';
    var isAllSelected = bulkSelection === 'all';

    var handleClick = function handleClick(event) {
        if (bulkSelection === 'none') {
            return onSelectAllRows(event);
        }
        return onDeselectAllRows(event);
    };

    if (isRadio) {
        return _react2.default.createElement('th', { className: 'rainbow-table_header-wrapper', style: style, scope: 'col', tabIndex: -1 });
    }

    return _react2.default.createElement(
        'th',
        { style: style, scope: 'col', tabIndex: -1 },
        _react2.default.createElement(
            'div',
            {
                className: 'rainbow-table_header-checkbox-container rainbow-table_header-wrapper',
                style: style
            },
            _react2.default.createElement(_InputCheckbox2.default, {
                name: name,
                label: 'select all rows',
                hideLabel: true,
                type: 'checkbox',
                tabIndex: '-1',
                checked: isAllSelected,
                indeterminate: isIndeterminate,
                disabled: isDisabled,
                onClick: handleClick
            })
        )
    );
}

SelectableHeader.propTypes = {
    onSelectAllRows: _propTypes2.default.func,
    onDeselectAllRows: _propTypes2.default.func,
    tableId: _propTypes2.default.string.isRequired,
    maxRowSelection: _propTypes2.default.number,
    bulkSelection: _propTypes2.default.oneOf(['none', 'some', 'all']),
    style: _propTypes2.default.object
};

SelectableHeader.defaultProps = {
    onSelectAllRows: function onSelectAllRows() {},
    onDeselectAllRows: function onDeselectAllRows() {},
    maxRowSelection: undefined,
    bulkSelection: 'none',
    style: undefined
};
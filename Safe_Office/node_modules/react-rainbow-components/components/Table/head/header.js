'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _RenderIf = require('../../RenderIf');

var _RenderIf2 = _interopRequireDefault(_RenderIf);

var _columns = require('./../helpers/columns');

var _sortArrowIcon = require('./sortArrowIcon');

var _sortArrowIcon2 = _interopRequireDefault(_sortArrowIcon);

var _resizeBar = require('./resizeBar');

var _resizeBar2 = _interopRequireDefault(_resizeBar);

var _selectableHeader = require('./selectableHeader');

var _selectableHeader2 = _interopRequireDefault(_selectableHeader);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Header = function (_Component) {
    _inherits(Header, _Component);

    function Header(props) {
        _classCallCheck(this, Header);

        var _this = _possibleConstructorReturn(this, (Header.__proto__ || Object.getPrototypeOf(Header)).call(this, props));

        _this.handleSort = _this.handleSort.bind(_this);
        _this.handleResize = _this.handleResize.bind(_this);
        return _this;
    }

    _createClass(Header, [{
        key: 'getClassName',
        value: function getClassName() {
            var _props = this.props,
                sortable = _props.sortable,
                isSorted = _props.isSorted;

            return (0, _classnames2.default)('rainbow-table_header', {
                'rainbow-table_header--resizable': this.isResizable(),
                'rainbow-table_header--sortable': sortable,
                'rainbow-table_header--sorted': isSorted
            });
        }
    }, {
        key: 'getTabIndex',
        value: function getTabIndex() {
            var isSorted = this.props.isSorted;

            if (isSorted) {
                return 0;
            }
            return -1;
        }
    }, {
        key: 'getHeaderContent',
        value: function getHeaderContent() {
            var content = this.props.content;

            if (typeof content === 'string') {
                return content;
            }
            return undefined;
        }
    }, {
        key: 'isResizable',
        value: function isResizable() {
            var _props2 = this.props,
                resizeColumnDisabled = _props2.resizeColumnDisabled,
                width = _props2.width;

            return !resizeColumnDisabled && width === undefined;
        }
    }, {
        key: 'handleResize',
        value: function handleResize(widthDelta) {
            var _props3 = this.props,
                onResize = _props3.onResize,
                colIndex = _props3.colIndex;

            onResize(widthDelta, colIndex);
        }
    }, {
        key: 'handleSort',
        value: function handleSort(event) {
            var _props4 = this.props,
                onSort = _props4.onSort,
                field = _props4.field,
                sortable = _props4.sortable,
                sortDirection = _props4.sortDirection;

            if (sortable) {
                onSort(event, field, sortDirection);
            }
        }
    }, {
        key: 'render',
        value: function render() {
            var _props5 = this.props,
                content = _props5.content,
                sortDirection = _props5.sortDirection,
                minColumnWidth = _props5.minColumnWidth,
                maxColumnWidth = _props5.maxColumnWidth,
                sortable = _props5.sortable,
                computedWidth = _props5.computedWidth,
                type = _props5.type,
                onSelectAllRows = _props5.onSelectAllRows,
                onDeselectAllRows = _props5.onDeselectAllRows,
                tableId = _props5.tableId,
                maxRowSelection = _props5.maxRowSelection,
                bulkSelection = _props5.bulkSelection;

            var headerStyles = {
                width: computedWidth
            };

            if (type === _columns.SELECTABLE_CHECKBOX) {
                return _react2.default.createElement(_selectableHeader2.default, {
                    onSelectAllRows: onSelectAllRows,
                    onDeselectAllRows: onDeselectAllRows,
                    tableId: tableId,
                    maxRowSelection: maxRowSelection,
                    bulkSelection: bulkSelection,
                    style: headerStyles
                });
            }

            return _react2.default.createElement(
                'th',
                {
                    className: this.getClassName(),
                    style: headerStyles,
                    scope: 'col',
                    tabIndex: this.getTabIndex(),
                    'aria-label': this.getHeaderContent()
                },
                _react2.default.createElement(
                    'div',
                    { className: 'rainbow-table_header-wrapper', style: headerStyles },
                    _react2.default.createElement(
                        'div',
                        {
                            className: 'rainbow-table_header-container',
                            role: 'presentation',
                            onClick: this.handleSort
                        },
                        _react2.default.createElement(
                            'span',
                            {
                                title: this.getHeaderContent(),
                                className: 'rainbow-table_header-content'
                            },
                            content
                        ),
                        _react2.default.createElement(
                            _RenderIf2.default,
                            { isTrue: sortable },
                            _react2.default.createElement(_sortArrowIcon2.default, { direction: sortDirection })
                        )
                    ),
                    _react2.default.createElement(_resizeBar2.default, {
                        minColumnWidth: minColumnWidth,
                        maxColumnWidth: maxColumnWidth,
                        isResizable: this.isResizable(),
                        ariaLabel: this.getHeaderContent(),
                        onResize: this.handleResize,
                        headerWidth: computedWidth
                    })
                )
            );
        }
    }]);

    return Header;
}(_react.Component);

exports.default = Header;


Header.propTypes = {
    content: _propTypes2.default.any,
    colIndex: _propTypes2.default.number.isRequired,
    isSorted: _propTypes2.default.bool,
    sortable: _propTypes2.default.bool,
    sortDirection: _propTypes2.default.string,
    onSort: _propTypes2.default.func,
    minColumnWidth: _propTypes2.default.number,
    maxColumnWidth: _propTypes2.default.number,
    onResize: _propTypes2.default.func,
    resizeColumnDisabled: _propTypes2.default.bool,
    field: _propTypes2.default.string,
    width: _propTypes2.default.number,
    computedWidth: _propTypes2.default.number,
    type: _propTypes2.default.string,
    onSelectAllRows: _propTypes2.default.func,
    onDeselectAllRows: _propTypes2.default.func,
    tableId: _propTypes2.default.string.isRequired,
    maxRowSelection: _propTypes2.default.number,
    bulkSelection: _propTypes2.default.oneOf(['none', 'some', 'all'])
};

Header.defaultProps = {
    content: null,
    isSorted: false,
    sortable: false,
    sortDirection: undefined,
    onSort: function onSort() {},
    minColumnWidth: undefined,
    maxColumnWidth: undefined,
    onResize: function onResize() {},
    resizeColumnDisabled: false,
    field: undefined,
    width: undefined,
    computedWidth: 0,
    type: undefined,
    onSelectAllRows: function onSelectAllRows() {},
    onDeselectAllRows: function onDeselectAllRows() {},
    maxRowSelection: undefined,
    bulkSelection: 'none'
};
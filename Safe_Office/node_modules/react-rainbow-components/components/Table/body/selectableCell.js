'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = SelectableCell;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _Input = require('../../Input');

var _Input2 = _interopRequireDefault(_Input);

var _constants = require('../../../libs/constants');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function SelectableCell(props) {
    var isSelected = props.isSelected,
        isDisabled = props.isDisabled,
        tableId = props.tableId,
        onSelectRow = props.onSelectRow,
        onDeselectRow = props.onDeselectRow,
        inputType = props.inputType;

    var name = tableId + '-options';
    var isRadio = inputType === 'radio';

    var handleMouseDown = function handleMouseDown(event) {
        if (event.shiftKey) {
            event.preventDefault();
        }
    };

    var handleClick = function handleClick(event) {
        var isMultipleSelection = !isRadio && event.shiftKey;
        if (isRadio && isSelected) {
            return;
        }
        if (isSelected) {
            onDeselectRow(event, isMultipleSelection);
        } else {
            onSelectRow(event, isMultipleSelection);
        }
    };

    var handleKeyDown = function handleKeyDown(event) {
        var keyCode = event.keyCode;

        if (isRadio && (keyCode === _constants.LEFT_KEY || keyCode === _constants.RIGHT_KEY)) {
            event.preventDefault();
        }
    };

    return _react2.default.createElement(
        'td',
        { className: 'rainbow-table_cell-container', role: 'gridcell', tabIndex: -1 },
        _react2.default.createElement(
            'div',
            {
                className: 'rainbow-table_cell-checkbox-container',
                role: 'presentation',
                onMouseDown: handleMouseDown
            },
            _react2.default.createElement(_Input2.default, {
                className: 'rainbow-table_cell-checkbox',
                name: name,
                label: 'select row',
                hideLabel: true,
                type: inputType,
                tabIndex: '-1',
                checked: isSelected,
                disabled: isDisabled,
                onClick: handleClick,
                onKeyDown: handleKeyDown
            })
        )
    );
}

SelectableCell.propTypes = {
    isSelected: _propTypes2.default.bool,
    isDisabled: _propTypes2.default.bool,
    tableId: _propTypes2.default.string.isRequired,
    onSelectRow: _propTypes2.default.func,
    onDeselectRow: _propTypes2.default.func,
    inputType: _propTypes2.default.string
};

SelectableCell.defaultProps = {
    isSelected: false,
    isDisabled: false,
    onSelectRow: function onSelectRow() {},
    onDeselectRow: function onDeselectRow() {},
    inputType: 'checkbox'
};
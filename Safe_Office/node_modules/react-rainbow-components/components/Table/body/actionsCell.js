'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.default = ActionsCell;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _ButtonMenu = require('../../ButtonMenu');

var _ButtonMenu2 = _interopRequireDefault(_ButtonMenu);

var _more = require('./icons/more');

var _more2 = _interopRequireDefault(_more);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function MenuItems(_ref) {
    var children = _ref.children,
        rowData = _ref.rowData;

    return _react2.default.Children.map(children, function (child) {
        if ((0, _react.isValidElement)(child)) {
            return _extends({}, child, {
                props: _extends({}, child.props, {
                    onClick: function onClick(event) {
                        return child.props.onClick(event, rowData);
                    }
                })
            });
        }
        return null;
    }, null);
}

function ActionsCell(props) {
    var columnChildren = props.columnChildren,
        rowsLength = props.rowsLength,
        rowIndex = props.rowIndex,
        rowData = props.rowData;


    if (columnChildren) {
        var getMenuAlignment = function getMenuAlignment() {
            var menuItemsLength = columnChildren.length || 1;
            var rowLengthToBottom = rowsLength - (rowIndex + 1);
            var alignMenuAtBottom = void 0;

            if (rowsLength / 2 > menuItemsLength) {
                alignMenuAtBottom = rowLengthToBottom <= menuItemsLength;
            } else {
                alignMenuAtBottom = rowIndex > menuItemsLength;
            }
            if (alignMenuAtBottom) {
                return 'bottom-right';
            }
            return 'right';
        };

        return _react2.default.createElement(
            'td',
            { className: 'rainbow-table_actions-cell-container', role: 'gridcell', tabIndex: -1 },
            _react2.default.createElement(
                'div',
                { className: 'rainbow-table_actions-cell' },
                _react2.default.createElement(
                    _ButtonMenu2.default,
                    {
                        tabIndex: -1,
                        icon: _react2.default.createElement(_more2.default, null),
                        menuAlignment: getMenuAlignment(),
                        buttonSize: 'small'
                    },
                    _react2.default.createElement(
                        MenuItems,
                        { rowData: rowData },
                        columnChildren
                    )
                )
            )
        );
    }
    return null;
}

ActionsCell.propTypes = {
    columnChildren: _propTypes2.default.oneOfType([_propTypes2.default.arrayOf(_propTypes2.default.node), _propTypes2.default.object]),
    rowsLength: _propTypes2.default.number,
    rowIndex: _propTypes2.default.number,
    rowData: _propTypes2.default.object
};

ActionsCell.defaultProps = {
    columnChildren: undefined,
    rowsLength: undefined,
    rowIndex: undefined,
    rowData: {}
};
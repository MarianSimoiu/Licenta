'use strict';

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _enzyme = require('enzyme');

var _MenuItem = require('../../../MenuItem');

var _MenuItem2 = _interopRequireDefault(_MenuItem);

var _actionsCell = require('../actionsCell');

var _actionsCell2 = _interopRequireDefault(_actionsCell);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var columnChildren = [_react2.default.createElement(_MenuItem2.default, null), _react2.default.createElement(_MenuItem2.default, null)];

describe('<ActionsCell />', function () {
    it('should not render anything when columnChildren is not passed', function () {
        var component = (0, _enzyme.mount)(_react2.default.createElement(_actionsCell2.default, null));
        expect(component.children().length).toBe(0);
    });
    it('should render the menu items passed as columnChildren', function () {
        var component = (0, _enzyme.mount)(_react2.default.createElement(_actionsCell2.default, { columnChildren: columnChildren, rowsLength: 3, rowIndex: 1 }));
        expect(component.find(_MenuItem2.default).length).toBe(2);
    });
    it('should render only one menu item', function () {
        var singleColumnChild = _react2.default.createElement(_MenuItem2.default, null);
        var component = (0, _enzyme.mount)(_react2.default.createElement(_actionsCell2.default, { columnChildren: singleColumnChild, rowsLength: 3, rowIndex: 1 }));
        expect(component.find(_MenuItem2.default).length).toBe(1);
    });
    it('should set the menuAlignment to "right" in ButtonMenu component', function () {
        var values = [1, 2, 3, 4, 5];
        values.forEach(function (value) {
            var component = (0, _enzyme.mount)(_react2.default.createElement(_actionsCell2.default, { columnChildren: columnChildren, rowsLength: value, rowIndex: 1 }));
            expect(component.find('ButtonMenu').prop('menuAlignment')).toBe('right');
        });
    });
    it('should set the menuAlignment to "bottom-right" in ButtonMenu component', function () {
        var values = [4, 5, 6];
        values.forEach(function (value) {
            var component = (0, _enzyme.mount)(_react2.default.createElement(_actionsCell2.default, { columnChildren: columnChildren, rowsLength: value, rowIndex: 3 }));
            expect(component.find('ButtonMenu').prop('menuAlignment')).toBe('bottom-right');
        });
    });
    it('should not render any MenuItem when columnChildren are invalid', function () {
        var values = [[], ['asd'], [123]];
        values.forEach(function (value) {
            var component = (0, _enzyme.mount)(_react2.default.createElement(_actionsCell2.default, { columnChildren: value, rowsLength: 3, rowIndex: 1 }));
            expect(component.find(_MenuItem2.default).length).toBe(0);
        });
    });
    it('should fire an event when a MenuItem is clicked', function () {
        var onClickMockFn = jest.fn();
        var menuItemsChildren = [_react2.default.createElement(_MenuItem2.default, { onClick: onClickMockFn }), _react2.default.createElement(_MenuItem2.default, null)];
        var rowData = {
            name: 'John',
            email: 'john@gmail.com'
        };
        var component = (0, _enzyme.mount)(_react2.default.createElement(_actionsCell2.default, {
            columnChildren: menuItemsChildren,
            rowsLength: 3,
            rowIndex: 1,
            rowData: rowData
        }));
        component.find(_MenuItem2.default).at(0).simulate('click');
        expect(onClickMockFn).toHaveBeenCalledWith(expect.any(Object), {
            name: 'John',
            email: 'john@gmail.com'
        });
    });
});
'use strict';

var _computeUniqueRowKey = require('../computeUniqueRowKey');

var _computeUniqueRowKey2 = _interopRequireDefault(_computeUniqueRowKey);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var row = {
    name: 'Pepe',
    id: 'qwerty1234'
};

describe('computeUniqueRowKey', function () {
    it('should return the right key when keyField is not passed', function () {
        expect((0, _computeUniqueRowKey2.default)(row)).toBe('row-1');
    });
    it('should return the right key when a wrong keyField is passed', function () {
        var keyField = 'email';
        expect((0, _computeUniqueRowKey2.default)(row, keyField)).toBe('row-2');
    });
    it('should return the right key when a valid keyField is passed', function () {
        var keyFields = ['name', 'id'];
        keyFields.forEach(function (keyField) {
            expect((0, _computeUniqueRowKey2.default)(row, keyField)).toBe(row[keyField]);
        });
    });
    it('should return the right key when keyField use dot notation', function () {
        var rowData = {
            type: 'regular',
            data: {
                name: 'Pepe',
                id: 'qwerty1234'
            }
        };
        var keyField = 'data.id';
        expect((0, _computeUniqueRowKey2.default)(rowData, keyField)).toBe('qwerty1234');
    });
    it('should return the right key when data is nested and keyField does not use dot notation', function () {
        var rowData = {
            type: 'regular',
            data: {
                name: 'Pepe',
                id: 'qwerty1234'
            }
        };
        var keyField = 'data';
        expect((0, _computeUniqueRowKey2.default)(rowData, keyField)).toBe('row-3');
    });
});
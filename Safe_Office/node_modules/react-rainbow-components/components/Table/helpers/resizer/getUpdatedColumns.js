'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.default = getUpdatedColumns;

var _getTotalWidthsMetadata = require('./getTotalWidthsMetadata');

var _getTotalWidthsMetadata2 = _interopRequireDefault(_getTotalWidthsMetadata);

var _getExpectedTableWidth = require('./getExpectedTableWidth');

var _getExpectedTableWidth2 = _interopRequireDefault(_getExpectedTableWidth);

var _getExpectedFlexibleColumnWidth = require('./getExpectedFlexibleColumnWidth');

var _getExpectedFlexibleColumnWidth2 = _interopRequireDefault(_getExpectedFlexibleColumnWidth);

var _getColumnWidthFromDef = require('./getColumnWidthFromDef');

var _getColumnWidthFromDef2 = _interopRequireDefault(_getColumnWidthFromDef);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getUpdatedColumns(params) {
    var columns = params.columns,
        domTableWidth = params.domTableWidth,
        minColumnWidth = params.minColumnWidth,
        maxColumnWidth = params.maxColumnWidth;

    var widthsMeta = (0, _getTotalWidthsMetadata2.default)({
        columns: columns,
        minColumnWidth: Number(minColumnWidth),
        maxColumnWidth: Number(maxColumnWidth)
    });
    var expectedTableWidth = (0, _getExpectedTableWidth2.default)(domTableWidth, widthsMeta);
    var expectedFlexibleColumnWidth = (0, _getExpectedFlexibleColumnWidth2.default)(widthsMeta, expectedTableWidth);

    return columns.map(function (column) {
        return _extends({}, column, {
            computedWidth: (0, _getColumnWidthFromDef2.default)(column) || expectedFlexibleColumnWidth
        });
    });
}
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = Pagination;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _leftArrow = require('./leftArrow');

var _leftArrow2 = _interopRequireDefault(_leftArrow);

var _rightArrow = require('./rightArrow');

var _rightArrow2 = _interopRequireDefault(_rightArrow);

var _navigationButton = require('./navigationButton');

var _navigationButton2 = _interopRequireDefault(_navigationButton);

var _pageButtons = require('./pageButtons');

var _pageButtons2 = _interopRequireDefault(_pageButtons);

require('./styles.css');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @category Layout
 */
function Pagination(props) {
    var pages = props.pages,
        activePage = props.activePage,
        onChange = props.onChange,
        className = props.className,
        style = props.style;


    var isFirstItemSelected = activePage === 1;
    var isLastItemSelected = activePage === pages;

    return _react2.default.createElement(
        'nav',
        { className: className, 'aria-label': 'pagination', style: style },
        _react2.default.createElement(
            'ul',
            { className: 'rainbow-pagination' },
            _react2.default.createElement(_navigationButton2.default, {
                dataId: 'previous-page-button',
                icon: _react2.default.createElement(_leftArrow2.default, null),
                onClick: function onClick(event) {
                    return onChange(event, activePage - 1);
                },
                disabled: isFirstItemSelected,
                ariaLabel: 'Goto Previous Page'
            }),
            _react2.default.createElement(_pageButtons2.default, { onChange: onChange, pages: pages, activePage: activePage }),
            _react2.default.createElement(_navigationButton2.default, {
                dataId: 'next-page-button',
                icon: _react2.default.createElement(_rightArrow2.default, null),
                onClick: function onClick(event) {
                    return onChange(event, activePage + 1);
                },
                disabled: isLastItemSelected,
                ariaLabel: 'Goto Next Page'
            })
        )
    );
}

Pagination.propTypes = {
    /** The number of pages. */
    pages: _propTypes2.default.number.isRequired,
    /** The number of the page that is selected. */
    activePage: _propTypes2.default.number,
    /** The action triggered when page button is clicked. */
    onChange: _propTypes2.default.func,
    /** A CSS class for the outer element, in addition to the component's base classes. */
    className: _propTypes2.default.string,
    /** An object with custom style applied to the outer element. */
    style: _propTypes2.default.object
};

Pagination.defaultProps = {
    activePage: undefined,
    onChange: function onChange() {},
    className: undefined,
    style: undefined
};
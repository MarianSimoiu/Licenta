'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = PageButtons;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _getFirstItem = require('./getFirstItem');

var _getFirstItem2 = _interopRequireDefault(_getFirstItem);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* eslint-disable no-script-url */
function PageButtons(props) {
    var pages = props.pages,
        activePage = props.activePage,
        onChange = props.onChange;


    var getButtonClassName = function getButtonClassName(page) {
        return (0, _classnames2.default)('rainbow-pagination_button-content', {
            'rainbow-pagination_button-content--active': activePage === page
        });
    };

    var getAriaCurrent = function getAriaCurrent(page) {
        if (page === activePage) {
            return 'page';
        }
        return undefined;
    };

    var renderButtons = function renderButtons() {
        var firstItem = pages > 4 ? (0, _getFirstItem2.default)(pages, activePage) : 1;
        var buttonsToRender = pages > 4 ? 5 : pages;
        return Array(buttonsToRender).fill(0).map(function (item, index) {
            var page = firstItem + index;
            var key = 'page-button-' + page;
            var ariaLabel = 'Goto Page ' + page;

            return _react2.default.createElement(
                'li',
                { key: key, className: 'rainbow-pagination_button' },
                _react2.default.createElement(
                    'a',
                    {
                        className: getButtonClassName(page),
                        onClick: function onClick(event) {
                            return onChange(event, page);
                        },
                        'aria-current': getAriaCurrent(page),
                        'aria-label': ariaLabel,
                        href: 'javascript:void(0);'
                    },
                    _react2.default.createElement(
                        'span',
                        null,
                        page
                    )
                )
            );
        });
    };

    return renderButtons();
}

PageButtons.propTypes = {
    activePage: _propTypes2.default.number,
    pages: _propTypes2.default.number.isRequired,
    onChange: _propTypes2.default.func.isRequired
};

PageButtons.defaultProps = {
    activePage: undefined
};
'use strict';

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _enzyme = require('enzyme');

var _timeSelect = require('../timeSelect');

var _timeSelect2 = _interopRequireDefault(_timeSelect);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

describe('TimeSelect', function () {
    it('should set hour state to "01" when press up key', function () {
        var component = (0, _enzyme.mount)(_react2.default.createElement(_timeSelect2.default, null));
        var hourInput = component.find('input').at(0);
        hourInput.simulate('focus');
        component.find('div[role="presentation"]').simulate('keyDown', { keyCode: 38 });
        expect(component.instance().state.hour).toBe('01');
    });
    it('should set hour state to "12" when press down key', function () {
        var component = (0, _enzyme.mount)(_react2.default.createElement(_timeSelect2.default, null));
        var hourInput = component.find('input').at(0);
        hourInput.simulate('focus');
        component.find('div[role="presentation"]').simulate('keyDown', { keyCode: 40 });
        expect(component.instance().state.hour).toBe('12');
    });
    it('should set hour state to "05" when press up key', function () {
        var component = (0, _enzyme.mount)(_react2.default.createElement(_timeSelect2.default, null));
        var hourInput = component.find('input').at(0);
        var container = component.find('div[role="presentation"]');
        hourInput.simulate('focus');
        container.simulate('keyDown', { keyCode: 38 });
        container.simulate('keyDown', { keyCode: 38 });
        container.simulate('keyDown', { keyCode: 38 });
        container.simulate('keyDown', { keyCode: 38 });
        container.simulate('keyDown', { keyCode: 38 });
        expect(component.instance().state.hour).toBe('05');
    });
    it('should set hour state to right value and focus minutes input', function () {
        var component = (0, _enzyme.mount)(_react2.default.createElement(_timeSelect2.default, null));
        var values = ['000', '001', '002', '005', '009', '010', '011', '012', '013', '014', '015', '016', '017', '018', '019', '2', '3', '6', '9'];
        var expects = ['12', '01', '02', '05', '09', '10', '11', '12', '01', '02', '03', '04', '05', '06', '07', '02', '03', '06', '09'];

        values.forEach(function (value, index) {
            var hourInput = component.find('input').at(0);
            hourInput.simulate('focus');
            hourInput.simulate('change', { target: { value: value } });
            var focusedElementDataId = document.activeElement.getAttribute('data-id');
            expect(component.instance().state.hour).toBe(expects[index]);
            expect(focusedElementDataId).toBe('minutes');
        });
    });
    it('should set hour state to "01" when press up button', function () {
        var component = (0, _enzyme.mount)(_react2.default.createElement(_timeSelect2.default, null));
        var upButton = component.find('ButtonIcon').at(0);
        var hourInput = component.find('input').at(0);
        hourInput.simulate('focus');
        upButton.simulate('click');
        expect(component.instance().state.hour).toBe('01');
    });
    it('should set hour state to "02" when press up button and then type "2"', function () {
        var component = (0, _enzyme.mount)(_react2.default.createElement(_timeSelect2.default, null));
        var upButton = component.find('ButtonIcon').at(0);
        var hourInput = component.find('input').at(0);
        hourInput.simulate('focus');
        upButton.simulate('click');
        hourInput.simulate('change', { target: { value: '2' } });
        expect(component.instance().state.hour).toBe('02');
    });
    it('should set hour state to "12" when type 0 and then blur the hour input', function () {
        var component = (0, _enzyme.mount)(_react2.default.createElement(_timeSelect2.default, null));
        var hourInput = component.find('input').at(0);
        hourInput.simulate('focus');
        hourInput.simulate('change', { target: { value: '0' } });
        hourInput.simulate('blur');
        expect(component.instance().state.hour).toBe('12');
    });
});
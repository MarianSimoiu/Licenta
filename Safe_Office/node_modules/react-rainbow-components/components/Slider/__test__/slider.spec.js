'use strict';

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _enzyme = require('enzyme');

var _index = require('../index');

var _index2 = _interopRequireDefault(_index);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

describe('<Slider />', function () {
    it('should fire an event when the user change the input', function () {
        var onChangeFn = jest.fn();
        var component = (0, _enzyme.mount)(_react2.default.createElement(_index2.default, { onChange: onChangeFn }));
        component.find('input').simulate('change');
        expect(onChangeFn).toHaveBeenCalledTimes(1);
    });
    it('should set the value passed in the input element', function () {
        var component = (0, _enzyme.mount)(_react2.default.createElement(_index2.default, { value: '50' }));
        expect(component.find('input').prop('value')).toBe('50');
    });
    it('should set the min value passed in the input element', function () {
        var component = (0, _enzyme.mount)(_react2.default.createElement(_index2.default, { min: '50' }));
        expect(component.find('input').prop('min')).toBe('50');
    });
    it('should set the max value passed in the input element', function () {
        var component = (0, _enzyme.mount)(_react2.default.createElement(_index2.default, { max: '50' }));
        expect(component.find('input').prop('max')).toBe('50');
    });
    it('should set the step value passed in the input element', function () {
        var component = (0, _enzyme.mount)(_react2.default.createElement(_index2.default, { step: '50' }));
        expect(component.find('input').prop('step')).toBe('50');
    });
    it('should set the disabled passed in the input element', function () {
        var component = (0, _enzyme.mount)(_react2.default.createElement(_index2.default, { disabled: true }));
        expect(component.find('input').prop('disabled')).toBe(true);
    });
    it('should set an id in the input element', function () {
        var component = (0, _enzyme.mount)(_react2.default.createElement(_index2.default, null));
        expect(component.find('input').prop('id')).toMatch(/slider-id/);
    });
    it('should pass a generated id to the Error element and set the same id to the aria-describedby for the input when a error is passed', function () {
        var component = (0, _enzyme.mount)(_react2.default.createElement(_index2.default, { error: 'error message' }));
        expect(component.find('.rainbow-slider_error').prop('id')).toMatch(/error-message/);
        expect(component.find('input').prop('aria-describedby')).toMatch(/error-message/);
    });
    it('should not set aria-describedby in the input if no error is passed', function () {
        var component = (0, _enzyme.mount)(_react2.default.createElement(_index2.default, null));
        expect(component.find('.rainbow-slider_error').exists()).toBe(false);
        expect(component.find('input').prop('aria-describedby')).toBe(undefined);
    });
});
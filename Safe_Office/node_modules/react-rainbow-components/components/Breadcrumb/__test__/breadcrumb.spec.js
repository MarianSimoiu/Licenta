'use strict';

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _enzyme = require('enzyme');

var _index = require('./../index');

var _index2 = _interopRequireDefault(_index);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

describe('<Breadcrumb/>', function () {
    it('should fallback the href to href="javascript:void(0);" if the prop is not provided', function () {
        var component = (0, _enzyme.mount)(_react2.default.createElement(_index2.default, { label: 'index' }));

        expect(component.find('a').prop('href')).toBe('javascript:void(0);');
    });
    it('should set the href passed', function () {
        var component = (0, _enzyme.mount)(_react2.default.createElement(_index2.default, { label: 'index', href: 'index' }));

        expect(component.find('a').prop('href')).toBe('index');
    });
    it('should invoke onClick callback when we clicked in the breadcrumb', function () {
        var onClickMockFn = jest.fn();
        var component = (0, _enzyme.mount)(_react2.default.createElement(_index2.default, { label: 'index', onClick: onClickMockFn }));

        component.find('a').simulate('click');
        expect(onClickMockFn.mock.calls.length).toBe(1);
    });
    it('should set the label passed as children', function () {
        var component = (0, _enzyme.mount)(_react2.default.createElement(_index2.default, { label: 'index' }));

        expect(component.find('a').text()).toBe('index');
    });
    it('should set the right aria-disabled value when the disabled is passed', function () {
        var component = (0, _enzyme.mount)(_react2.default.createElement(_index2.default, { label: 'index', disabled: true }));

        expect(component.find('a').prop('aria-disabled')).toBe(true);
    });
    it('should set the right className when the disabled is passed', function () {
        var component = (0, _enzyme.mount)(_react2.default.createElement(_index2.default, { label: 'index', disabled: true }));

        expect(component.find('li').prop('className')).toBe('rainbow-breadcrumb rainbow-breadcrumb--disabled');
    });
}); /* eslint-disable no-script-url */
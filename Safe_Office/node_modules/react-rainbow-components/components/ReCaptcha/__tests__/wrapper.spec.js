'use strict';

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _enzyme = require('enzyme');

var _wrapper = require('../wrapper');

var _wrapper2 = _interopRequireDefault(_wrapper);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

window.grecaptcha = {
    ready: jest.fn()
};

describe('<ReCaptchaWrapper />', function () {
    it('should not render when isScriptLoaded and isScriptLoadSucceed are false', function () {
        var component = (0, _enzyme.mount)(_react2.default.createElement(_wrapper2.default, null));
        component.setProps({
            isScriptLoaded: false,
            isScriptLoadSucceed: false
        });
        expect(component.children().length).toEqual(0);
    });
    it('should not render when isScriptLoaded is true and isScriptLoadSucceed is false', function () {
        var component = (0, _enzyme.mount)(_react2.default.createElement(_wrapper2.default, null));
        component.setProps({
            isScriptLoaded: true,
            isScriptLoadSucceed: false
        });
        expect(component.children().length).toEqual(0);
    });
    it('should render the ReCaptcha loader with the right props', function () {
        var component = (0, _enzyme.mount)(_react2.default.createElement(_wrapper2.default, {
            onChange: function onChange() {},
            value: 'site-key',
            theme: 'dark',
            size: 'normal',
            error: 'error',
            tabIndex: 0,
            isScriptLoaded: true,
            isScriptLoadSucceed: true
        }));
        var loader = component.find('ReCaptchaComponent');

        expect(loader.exists()).toBe(true);
        expect(loader.props()).toEqual({
            onChange: expect.any(Function),
            value: 'site-key',
            theme: 'dark',
            size: 'normal',
            error: 'error',
            tabIndex: 0,
            className: undefined,
            style: undefined
        });
    });
});
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = findTabbableElements;

var _isContentHidden = require('./isContentHidden');

var _isContentHidden2 = _interopRequireDefault(_isContentHidden);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var tabbableNode = /input|select|textarea|button|object/;

function isVisible(element) {
    var parentElement = element;
    while (parentElement) {
        if (parentElement === document.body) break;
        if ((0, _isContentHidden2.default)(parentElement)) return false;
        parentElement = parentElement.parentNode;
    }
    return true;
}

function isFocusable(element, isTabIndexNotNaN) {
    var nodeName = element.nodeName.toLowerCase();
    var res = tabbableNode.test(nodeName) && !element.disabled || (nodeName === 'a' ? element.href || isTabIndexNotNaN : isTabIndexNotNaN);
    return res && isVisible(element);
}

function tabbable(element) {
    var tabIndex = element.getAttribute('tabindex');
    if (tabIndex === null) tabIndex = undefined;
    var isTabIndexNaN = isNaN(tabIndex);
    return (isTabIndexNaN || tabIndex >= 0) && isFocusable(element, !isTabIndexNaN);
}

function findTabbableElements(element) {
    return [].slice.call(element.querySelectorAll('*'), 0).filter(tabbable);
}
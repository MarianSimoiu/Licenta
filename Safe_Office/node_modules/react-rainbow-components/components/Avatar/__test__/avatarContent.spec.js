'use strict';

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _enzyme = require('enzyme');

var _avatarContent = require('./../avatarContent');

var _avatarContent2 = _interopRequireDefault(_avatarContent);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

describe('<AvatarContent/>', function () {
    it('should render an img when src is passed', function () {
        var component = (0, _enzyme.mount)(_react2.default.createElement(_avatarContent2.default, { src: 'images/user/user1.jpg' }));
        expect(component.find('img').exists()).toBe(true);
    });
    it('should pass right props to the img element when a valid src is passed', function () {
        var component = (0, _enzyme.mount)(_react2.default.createElement(_avatarContent2.default, { src: 'images/user/user1.jpg', title: 'Title' }));
        expect(component.find('img').props()).toEqual({
            src: 'images/user/user1.jpg',
            onError: expect.any(Function),
            title: 'Title'
        });
    });
    it('should render an abbr when src is not passed and initials props is passed', function () {
        var component = (0, _enzyme.mount)(_react2.default.createElement(_avatarContent2.default, { initials: 'JD' }));
        expect(component.find('abbr').exists()).toBe(true);
    });
    it('should pass right props to the abbr element when src is not passed and initials props is passed', function () {
        var component = (0, _enzyme.mount)(_react2.default.createElement(_avatarContent2.default, { initialsVariant: 'default', initials: 'JD', title: 'Title' }));
        expect(component.find('abbr').props()).toEqual({
            children: 'JD',
            className: 'rainbow-avatar_initials',
            title: 'Title'
        });
    });
    it('should have the right class names when initials variant is default', function () {
        var component = (0, _enzyme.mount)(_react2.default.createElement(_avatarContent2.default, { initialsVariant: 'default' }));
        expect(component.find('span[className="rainbow-avatar_initials"]').exists()).toBe(true);
    });
    it('should have the right class names when initials variant is inverse', function () {
        var component = (0, _enzyme.mount)(_react2.default.createElement(_avatarContent2.default, { initialsVariant: 'inverse' }));
        expect(component.find('span[className="rainbow-avatar_initials rainbow-avatar_initials--inverse"]').exists()).toBe(true);
    });
    it('should have the right class names when initials, icon and variant are not passed', function () {
        var component = (0, _enzyme.mount)(_react2.default.createElement(_avatarContent2.default, null));
        expect(component.find('span[className="rainbow-avatar_initials"]').exists()).toBe(true);
    });
    it('should return the icon passed when src and initials are not passed', function () {
        var component = (0, _enzyme.mount)(_react2.default.createElement(_avatarContent2.default, { icon: _react2.default.createElement('svg', null) }));
        expect(component.find('svg').exists()).toBe(true);
    });
});
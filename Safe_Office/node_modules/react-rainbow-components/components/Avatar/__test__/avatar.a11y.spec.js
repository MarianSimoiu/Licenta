'use strict';

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _server = require('react-dom/server');

var _server2 = _interopRequireDefault(_server);

var _jestAxe = require('jest-axe');

var _ = require('./../');

var _2 = _interopRequireDefault(_);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

describe('<Avatar/>', function () {
    it('should be accessible when a src and assistiveText are passed', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {
        var html, results;
        return regeneratorRuntime.wrap(function _callee$(_context) {
            while (1) {
                switch (_context.prev = _context.next) {
                    case 0:
                        expect.assertions(1);
                        html = _server2.default.renderToString(_react2.default.createElement(_2.default, { src: 'images/user/user1.jpg', assistiveText: 'user photo' }));
                        _context.next = 4;
                        return (0, _jestAxe.axe)(html);

                    case 4:
                        results = _context.sent;

                        expect(results).toHaveNoViolations();

                    case 6:
                    case 'end':
                        return _context.stop();
                }
            }
        }, _callee, undefined);
    })));
});
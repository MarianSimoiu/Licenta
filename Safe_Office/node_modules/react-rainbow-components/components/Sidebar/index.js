'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = Sidebar;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _context = require('./context');

require('./styles.css');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Sidebar represents a list of links that either take the user to another
 * page or parts of the page the user is in.
 * @category Layout
 */
function Sidebar(props) {
    var ariaLabel = props.ariaLabel,
        style = props.style,
        selectedItem = props.selectedItem,
        onSelect = props.onSelect,
        className = props.className,
        children = props.children,
        id = props.id;


    var context = {
        selectedItem: selectedItem,
        onSelect: onSelect
    };

    var getClassNames = function getClassNames() {
        return (0, _classnames2.default)('rainbow-sidebar', className);
    };

    return _react2.default.createElement(
        'nav',
        { id: id, className: getClassNames(), style: style, 'aria-label': ariaLabel },
        _react2.default.createElement(
            _context.Provider,
            { value: context },
            _react2.default.createElement(
                'ul',
                null,
                children
            )
        )
    );
}

Sidebar.propTypes = {
    /** The id of the outer element. */
    id: _propTypes2.default.string,
    /** Name of the nagivation item to make active. */
    selectedItem: _propTypes2.default.node,
    /** Action fired when an item is selected.
     * The event params include the `name` of the selected item. */
    onSelect: _propTypes2.default.func,
    /** The aria label attribute for the navigation component. */
    ariaLabel: _propTypes2.default.string,
    /** A CSS class for the outer element, in addition to the component's base classes. */
    className: _propTypes2.default.string,
    /** An object with custom style applied for the outer element. */
    style: _propTypes2.default.object,
    /**
     * This prop that should not be visible in the documentation.
     * @ignore
     */
    children: _propTypes2.default.node
};

Sidebar.defaultProps = {
    selectedItem: null,
    onSelect: function onSelect() {},
    ariaLabel: undefined,
    className: undefined,
    style: undefined,
    children: null,
    id: undefined
};
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = Week;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _helpers = require('./helpers');

var _day = require('./day');

var _day2 = _interopRequireDefault(_day);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function Week(props) {
    var value = props.value,
        startDate = props.startDate,
        endDate = props.endDate,
        minDate = props.minDate,
        maxDate = props.maxDate,
        firstDayMonth = props.firstDayMonth,
        onChange = props.onChange;


    function Days() {
        var date = new Date(startDate);
        var days = [];

        while (date <= endDate) {
            days.push(_react2.default.createElement(_day2.default, {
                date: date,
                firstDayMonth: firstDayMonth,
                key: date.getTime(),
                minDate: minDate,
                maxDate: maxDate,
                onChange: onChange,
                isSelected: (0, _helpers.isSameDay)(date, value)
            }));
            date = (0, _helpers.addDays)(date, 1);
        }
        return days;
    }

    return _react2.default.createElement(
        'tr',
        null,
        _react2.default.createElement(Days, null)
    );
}

Week.propTypes = {
    firstDayMonth: _propTypes2.default.instanceOf(Date),
    minDate: _propTypes2.default.instanceOf(Date),
    maxDate: _propTypes2.default.instanceOf(Date),
    startDate: _propTypes2.default.instanceOf(Date),
    endDate: _propTypes2.default.instanceOf(Date),
    value: _propTypes2.default.oneOfType([_propTypes2.default.instanceOf(Date), _propTypes2.default.string]),
    onChange: _propTypes2.default.func
};

Week.defaultProps = {
    firstDayMonth: undefined,
    minDate: undefined,
    maxDate: undefined,
    startDate: undefined,
    endDate: undefined,
    value: undefined,
    onChange: function onChange() {}
};
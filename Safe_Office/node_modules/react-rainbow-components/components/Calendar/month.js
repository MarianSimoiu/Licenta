'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = Month;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _helpers = require('./helpers');

var _week = require('./week');

var _week2 = _interopRequireDefault(_week);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function Month(props) {
    var firstDayMonth = props.firstDayMonth,
        value = props.value,
        minDate = props.minDate,
        maxDate = props.maxDate,
        onChange = props.onChange;

    var lastDayMonth = (0, _helpers.getLastDayMonth)(firstDayMonth);
    var date = new Date(firstDayMonth);

    function Weeks() {
        var weeks = [];
        var dayOfWeek = date.getDay();
        var daysAfter = 6 - dayOfWeek;
        while (date <= lastDayMonth || (0, _helpers.addDays)(date, -dayOfWeek) <= lastDayMonth) {
            var startDate = (0, _helpers.addDays)(date, -dayOfWeek);
            var endDate = (0, _helpers.addDays)(date, daysAfter);
            weeks.push(_react2.default.createElement(_week2.default, {
                value: value,
                startDate: startDate,
                endDate: endDate,
                minDate: minDate,
                maxDate: maxDate,
                firstDayMonth: firstDayMonth,
                key: date.getTime(),
                onChange: onChange
            }));
            date = (0, _helpers.addDays)(date, 7);
        }
        return weeks;
    }

    return _react2.default.createElement(
        'tbody',
        null,
        _react2.default.createElement(Weeks, null)
    );
}

Month.propTypes = {
    firstDayMonth: _propTypes2.default.instanceOf(Date),
    minDate: _propTypes2.default.instanceOf(Date),
    maxDate: _propTypes2.default.instanceOf(Date),
    value: _propTypes2.default.oneOfType([_propTypes2.default.instanceOf(Date), _propTypes2.default.string]),
    onChange: _propTypes2.default.func
};

Month.defaultProps = {
    firstDayMonth: undefined,
    minDate: undefined,
    maxDate: undefined,
    value: undefined,
    onChange: function onChange() {}
};
'use strict';

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _enzyme = require('enzyme');

var _index = require('./../index');

var _index2 = _interopRequireDefault(_index);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

describe('<Badge/>', function () {
    it('should set the label passed as children', function () {
        var component = (0, _enzyme.mount)(_react2.default.createElement(_index2.default, { label: 'Testing Label in Badge' }));
        expect(component.find('span.rainbow-badge').text()).toBe('Testing Label in Badge');
    });
    it('should not render the "Badge" when label and children are not passed', function () {
        var component = (0, _enzyme.mount)(_react2.default.createElement(_index2.default, null));
        expect(component.find('span.rainbow-badge').exists()).toBe(false);
    });
    it('should have the right class names when variant is not passed', function () {
        var component = (0, _enzyme.mount)(_react2.default.createElement(_index2.default, { label: 'Badge Label' }));
        expect(component.find('span.rainbow-badge').exists()).toBe(true);
    });
    it('should have the right class names when variant default and have a custom class', function () {
        var component = (0, _enzyme.mount)(_react2.default.createElement(_index2.default, { label: 'Badge Label', variant: 'default', className: 'my-custom-class-name' }));
        expect(component.find('span.rainbow-badge.my-custom-class-name').exists()).toBe(true);
    });
    it('should have the right class names when variant brand', function () {
        var component = (0, _enzyme.mount)(_react2.default.createElement(_index2.default, { label: 'Badge Label', variant: 'brand' }));
        expect(component.find('span.rainbow-badge.rainbow-badge--brand').exists()).toBe(true);
    });
    it('should have the right class names when variant outline-brand', function () {
        var component = (0, _enzyme.mount)(_react2.default.createElement(_index2.default, { label: 'Badge Label', variant: 'outline-brand' }));
        expect(component.find('span.rainbow-badge.rainbow-badge--outline-brand').exists()).toBe(true);
    });
    it('should have the right class names when variant lightest', function () {
        var component = (0, _enzyme.mount)(_react2.default.createElement(_index2.default, { label: 'Badge Label', variant: 'lightest' }));
        expect(component.find('span.rainbow-badge.rainbow-badge--lightest').exists()).toBe(true);
    });
    it('should have the right class names when variant inverse', function () {
        var component = (0, _enzyme.mount)(_react2.default.createElement(_index2.default, { label: 'Badge Label', variant: 'inverse' }));
        expect(component.find('span.rainbow-badge.rainbow-badge--inverse').exists()).toBe(true);
    });
});
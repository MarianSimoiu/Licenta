'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = Badge;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _content = require('./content');

var _content2 = _interopRequireDefault(_content);

require('./styles.css');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Badges are labels which hold small amounts of information.
 */
function Badge(props) {
    var className = props.className,
        style = props.style,
        label = props.label,
        title = props.title,
        children = props.children,
        variant = props.variant;


    function getVariantClassNames() {
        if (variant === 'default') {
            return null;
        }
        return 'rainbow-badge--' + variant;
    }

    function getClassName() {
        return (0, _classnames2.default)('rainbow-badge', getVariantClassNames(), className);
    }

    if (children === null && label === null) {
        return null;
    }

    return _react2.default.createElement(
        'span',
        { className: getClassName(), style: style, title: title },
        _react2.default.createElement(
            _content2.default,
            { label: label },
            children
        )
    );
}

Badge.propTypes = {
    /** The text to be displayed inside the badge. */
    label: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.node]),
    /** Displays tooltip text when the mouse moves over the element. */
    title: _propTypes2.default.string,
    /** The content of the badge. Used to render icon or text elements inside the badge.
     * Children takes precedence over label. */
    children: _propTypes2.default.node,
    /** The variant changes the appearance of the badge. Accepted variants include default,
     * inverse, lightest, brand and outline-brand. This value defaults to default. */
    variant: _propTypes2.default.oneOf(['default', 'inverse', 'lightest', 'outline-brand', 'brand']),
    /** A CSS class for the outer element, in addition to the component's base classes. */
    className: _propTypes2.default.string,
    /** An object with custom style applied to the outer element. */
    style: _propTypes2.default.object
};

Badge.defaultProps = {
    label: null,
    title: undefined,
    children: null,
    variant: 'default',
    className: undefined,
    style: undefined
};
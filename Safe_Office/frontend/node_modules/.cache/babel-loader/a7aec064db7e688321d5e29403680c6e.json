{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _inputBase = require('./inputBase');\n\nvar _inputBase2 = _interopRequireDefault(_inputBase);\n\nvar _inputRadio = require('./inputRadio');\n\nvar _inputRadio2 = _interopRequireDefault(_inputRadio);\n\nvar _inputCheckbox = require('./inputCheckbox');\n\nvar _inputCheckbox2 = _interopRequireDefault(_inputCheckbox);\n\nvar _withReduxForm = require('./../../libs/hocs/withReduxForm');\n\nvar _withReduxForm2 = _interopRequireDefault(_withReduxForm);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n/**\n * Text inputs are used for freeform data entry.\n * @category Form\n */\n\n\nvar Input = function (_Component) {\n  _inherits(Input, _Component);\n\n  function Input(props) {\n    _classCallCheck(this, Input);\n\n    var _this = _possibleConstructorReturn(this, (Input.__proto__ || Object.getPrototypeOf(Input)).call(this, props));\n\n    _this.inputRef = _react2.default.createRef();\n    return _this;\n  }\n  /**\n   * Sets focus on the element.\n   * @public\n   */\n\n\n  _createClass(Input, [{\n    key: 'focus',\n    value: function focus() {\n      this.inputRef.current.focus();\n    }\n    /**\n     * Sets click on the element.\n     * @public\n     */\n\n  }, {\n    key: 'click',\n    value: function click() {\n      this.inputRef.current.click();\n    }\n    /**\n     * Sets blur on the element.\n     * @public\n     */\n\n  }, {\n    key: 'blur',\n    value: function blur() {\n      this.inputRef.current.blur();\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var type = this.props.type;\n\n      if (type === 'radio') {\n        return _react2.default.createElement(_inputRadio2.default, _extends({\n          ref: this.inputRef\n        }, this.props));\n      }\n\n      if (type === 'checkbox') {\n        return _react2.default.createElement(_inputCheckbox2.default, _extends({\n          ref: this.inputRef\n        }, this.props));\n      }\n\n      return _react2.default.createElement(_inputBase2.default, _extends({\n        ref: this.inputRef\n      }, this.props));\n    }\n  }]);\n\n  return Input;\n}(_react.Component);\n\nInput.propTypes = {\n  /** Specifies the value of an input element. */\n  value: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.bool]),\n\n  /** The name of the input */\n  name: _propTypes2.default.string,\n\n  /** The type of the input. This value defaults to text. */\n  type: _propTypes2.default.oneOf(['text', 'password', 'datetime', 'datetime-local', 'date', 'month', 'time', 'week', 'number', 'email', 'url', 'search', 'tel', 'color', 'radio', 'checkbox']),\n\n  /** Text label for the input. */\n  label: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.node]).isRequired,\n\n  /** A boolean to hide the input label. */\n  hideLabel: _propTypes2.default.bool,\n\n  /** Text that is displayed when the field is empty, to prompt the user for a valid entry. */\n  placeholder: _propTypes2.default.string,\n\n  /** The icon to show if it is passed. It must be a svg icon or a font icon. */\n  icon: _propTypes2.default.node,\n\n  /** Describes the position of the icon with respect to body. Options include left and right.\n   * This value defaults to left. */\n  iconPosition: _propTypes2.default.oneOf(['left', 'right']),\n\n  /** The maximum number of characters allowed in the field. */\n  maxLength: _propTypes2.default.number,\n\n  /** The minimum number of characters allowed in the field. */\n  minLength: _propTypes2.default.number,\n\n  /** Shows the help message below the input. */\n  bottomHelpText: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.node]),\n\n  /** Specifies that an input field must be filled out before submitting the form.\n   * This value defaults to false. */\n  required: _propTypes2.default.bool,\n\n  /** Specifies the regular expression that the input's value is checked against.\n   * This attribute is supported for text, search, url, tel, email, and password types. */\n  pattern: _propTypes2.default.string,\n\n  /** Specifies that an input text will be centered. This value defaults to false. */\n  isCentered: _propTypes2.default.bool,\n\n  /** Specifies that an input will not have border. This value defaults to false. */\n  isBare: _propTypes2.default.bool,\n\n  /** Specifies that an input field must be filled out before submitting the form. */\n  error: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.node]),\n\n  /** Specifies that an input element should be disabled. This value defaults to false. */\n  disabled: _propTypes2.default.bool,\n\n  /** Specifies that an input field is read-only. This value defaults to false. */\n  readOnly: _propTypes2.default.bool,\n\n  /** The action triggered when a value attribute changes. */\n  onChange: _propTypes2.default.func,\n\n  /** Specifies the tab order of an element (when the tab button is used for navigating). */\n  tabIndex: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\n  /** The action triggered when the element is clicked. */\n  onClick: _propTypes2.default.func,\n\n  /** The action triggered when the element receives focus. */\n  onFocus: _propTypes2.default.func,\n\n  /** The action triggered when the element releases focus. */\n  onBlur: _propTypes2.default.func,\n\n  /** The action triggered when a key is pressed on the element. */\n  onKeyDown: _propTypes2.default.func,\n\n  /** Set the input to checked state when true. It is used only for input type checkbox. */\n  checked: _propTypes2.default.bool,\n\n  /** A CSS class for the outer element, in addition to the component's base classes. */\n  className: _propTypes2.default.string,\n\n  /** An object with custom style applied to the outer element. */\n  style: _propTypes2.default.object,\n\n  /** The id of the outer element. */\n  id: _propTypes2.default.string,\n\n  /** A string indicating the type of autocomplete functionality.\n   * If any, to allow on the input. */\n  autoComplete: _propTypes2.default.string\n};\nInput.defaultProps = {\n  value: undefined,\n  type: 'text',\n  name: undefined,\n  placeholder: null,\n  icon: undefined,\n  iconPosition: 'left',\n  maxLength: undefined,\n  minLength: undefined,\n  bottomHelpText: null,\n  required: false,\n  pattern: undefined,\n  isCentered: false,\n  isBare: false,\n  error: null,\n  disabled: false,\n  readOnly: false,\n  onChange: function onChange() {},\n  tabIndex: undefined,\n  onClick: function onClick() {},\n  onFocus: function onFocus() {},\n  onBlur: function onBlur() {},\n  onKeyDown: function onKeyDown() {},\n  checked: undefined,\n  className: undefined,\n  style: undefined,\n  id: undefined,\n  autoComplete: 'on',\n  hideLabel: false\n};\nexports.default = (0, _withReduxForm2.default)(Input);","map":{"version":3,"sources":["C:/Users/Marian/Desktop/My work/Licenta/Safe_Office/node_modules/react-rainbow-components/components/Input/index.js"],"names":["Object","defineProperty","exports","value","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_createClass","defineProperties","props","descriptor","enumerable","configurable","writable","Constructor","protoProps","staticProps","_react","require","_react2","_interopRequireDefault","_propTypes","_propTypes2","_inputBase","_inputBase2","_inputRadio","_inputRadio2","_inputCheckbox","_inputCheckbox2","_withReduxForm","_withReduxForm2","obj","__esModule","default","_classCallCheck","instance","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","setPrototypeOf","__proto__","Input","_Component","_this","getPrototypeOf","inputRef","createRef","focus","current","click","blur","render","type","createElement","ref","Component","propTypes","oneOfType","string","bool","name","oneOf","label","node","isRequired","hideLabel","placeholder","icon","iconPosition","maxLength","number","minLength","bottomHelpText","required","pattern","isCentered","isBare","error","disabled","readOnly","onChange","func","tabIndex","onClick","onFocus","onBlur","onKeyDown","checked","className","style","object","id","autoComplete","defaultProps","undefined"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _inputBase = require('./inputBase');\n\nvar _inputBase2 = _interopRequireDefault(_inputBase);\n\nvar _inputRadio = require('./inputRadio');\n\nvar _inputRadio2 = _interopRequireDefault(_inputRadio);\n\nvar _inputCheckbox = require('./inputCheckbox');\n\nvar _inputCheckbox2 = _interopRequireDefault(_inputCheckbox);\n\nvar _withReduxForm = require('./../../libs/hocs/withReduxForm');\n\nvar _withReduxForm2 = _interopRequireDefault(_withReduxForm);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * Text inputs are used for freeform data entry.\n * @category Form\n */\nvar Input = function (_Component) {\n    _inherits(Input, _Component);\n\n    function Input(props) {\n        _classCallCheck(this, Input);\n\n        var _this = _possibleConstructorReturn(this, (Input.__proto__ || Object.getPrototypeOf(Input)).call(this, props));\n\n        _this.inputRef = _react2.default.createRef();\n        return _this;\n    }\n\n    /**\n     * Sets focus on the element.\n     * @public\n     */\n\n\n    _createClass(Input, [{\n        key: 'focus',\n        value: function focus() {\n            this.inputRef.current.focus();\n        }\n\n        /**\n         * Sets click on the element.\n         * @public\n         */\n\n    }, {\n        key: 'click',\n        value: function click() {\n            this.inputRef.current.click();\n        }\n\n        /**\n         * Sets blur on the element.\n         * @public\n         */\n\n    }, {\n        key: 'blur',\n        value: function blur() {\n            this.inputRef.current.blur();\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            var type = this.props.type;\n\n\n            if (type === 'radio') {\n                return _react2.default.createElement(_inputRadio2.default, _extends({ ref: this.inputRef }, this.props));\n            }\n            if (type === 'checkbox') {\n                return _react2.default.createElement(_inputCheckbox2.default, _extends({ ref: this.inputRef }, this.props));\n            }\n            return _react2.default.createElement(_inputBase2.default, _extends({ ref: this.inputRef }, this.props));\n        }\n    }]);\n\n    return Input;\n}(_react.Component);\n\nInput.propTypes = {\n    /** Specifies the value of an input element. */\n    value: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.bool]),\n    /** The name of the input */\n    name: _propTypes2.default.string,\n    /** The type of the input. This value defaults to text. */\n    type: _propTypes2.default.oneOf(['text', 'password', 'datetime', 'datetime-local', 'date', 'month', 'time', 'week', 'number', 'email', 'url', 'search', 'tel', 'color', 'radio', 'checkbox']),\n    /** Text label for the input. */\n    label: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.node]).isRequired,\n    /** A boolean to hide the input label. */\n    hideLabel: _propTypes2.default.bool,\n    /** Text that is displayed when the field is empty, to prompt the user for a valid entry. */\n    placeholder: _propTypes2.default.string,\n    /** The icon to show if it is passed. It must be a svg icon or a font icon. */\n    icon: _propTypes2.default.node,\n    /** Describes the position of the icon with respect to body. Options include left and right.\n     * This value defaults to left. */\n    iconPosition: _propTypes2.default.oneOf(['left', 'right']),\n    /** The maximum number of characters allowed in the field. */\n    maxLength: _propTypes2.default.number,\n    /** The minimum number of characters allowed in the field. */\n    minLength: _propTypes2.default.number,\n    /** Shows the help message below the input. */\n    bottomHelpText: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.node]),\n    /** Specifies that an input field must be filled out before submitting the form.\n     * This value defaults to false. */\n    required: _propTypes2.default.bool,\n    /** Specifies the regular expression that the input's value is checked against.\n     * This attribute is supported for text, search, url, tel, email, and password types. */\n    pattern: _propTypes2.default.string,\n    /** Specifies that an input text will be centered. This value defaults to false. */\n    isCentered: _propTypes2.default.bool,\n    /** Specifies that an input will not have border. This value defaults to false. */\n    isBare: _propTypes2.default.bool,\n    /** Specifies that an input field must be filled out before submitting the form. */\n    error: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.node]),\n    /** Specifies that an input element should be disabled. This value defaults to false. */\n    disabled: _propTypes2.default.bool,\n    /** Specifies that an input field is read-only. This value defaults to false. */\n    readOnly: _propTypes2.default.bool,\n    /** The action triggered when a value attribute changes. */\n    onChange: _propTypes2.default.func,\n    /** Specifies the tab order of an element (when the tab button is used for navigating). */\n    tabIndex: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n    /** The action triggered when the element is clicked. */\n    onClick: _propTypes2.default.func,\n    /** The action triggered when the element receives focus. */\n    onFocus: _propTypes2.default.func,\n    /** The action triggered when the element releases focus. */\n    onBlur: _propTypes2.default.func,\n    /** The action triggered when a key is pressed on the element. */\n    onKeyDown: _propTypes2.default.func,\n    /** Set the input to checked state when true. It is used only for input type checkbox. */\n    checked: _propTypes2.default.bool,\n    /** A CSS class for the outer element, in addition to the component's base classes. */\n    className: _propTypes2.default.string,\n    /** An object with custom style applied to the outer element. */\n    style: _propTypes2.default.object,\n    /** The id of the outer element. */\n    id: _propTypes2.default.string,\n    /** A string indicating the type of autocomplete functionality.\n     * If any, to allow on the input. */\n    autoComplete: _propTypes2.default.string\n};\n\nInput.defaultProps = {\n    value: undefined,\n    type: 'text',\n    name: undefined,\n    placeholder: null,\n    icon: undefined,\n    iconPosition: 'left',\n    maxLength: undefined,\n    minLength: undefined,\n    bottomHelpText: null,\n    required: false,\n    pattern: undefined,\n    isCentered: false,\n    isBare: false,\n    error: null,\n    disabled: false,\n    readOnly: false,\n    onChange: function onChange() {},\n    tabIndex: undefined,\n    onClick: function onClick() {},\n    onFocus: function onFocus() {},\n    onBlur: function onBlur() {},\n    onKeyDown: function onKeyDown() {},\n    checked: undefined,\n    className: undefined,\n    style: undefined,\n    id: undefined,\n    autoComplete: 'on',\n    hideLabel: false\n};\n\nexports.default = (0, _withReduxForm2.default)(Input);"]},"metadata":{},"sourceType":"script"}
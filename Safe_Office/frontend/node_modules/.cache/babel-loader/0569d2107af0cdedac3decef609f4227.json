{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = Column;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * @category DataView\n */\n\n/* eslint-disable react/no-unused-prop-types */\n\n\nfunction Column() {\n  return _react2.default.createElement('div', null);\n}\n\nColumn.propTypes = {\n  /**\n   * The header of the column. it could just an String with text is going\n   * to be rendered or component with a desired content.\n   */\n  header: _propTypes2.default.oneOfType([_propTypes2.default.node, _propTypes2.default.string]),\n\n  /**\n   * The component class or function that is going to be use to render\n   * the content of each cell on this column. By default the cell is\n   * going to render the computed value(`data[rowIndex][field]`) for each cell.\n   */\n  component: _propTypes2.default.func,\n\n  /**\n   * The field value is used to compute/map the value is going to be render\n   * for each cell. it's the name of a property in the data objects.\n   *\n   * e.g `data = [{ name: 'Max', ... }, {...}]`;\n   * field could be 'name' for a column that want to represent names on a collection of people.\n   */\n  field: _propTypes2.default.string,\n\n  /**\n   * Sets whether the column should control the sorting order of the data.\n   * @ignore\n   */\n  sortable: _propTypes2.default.bool,\n\n  /** Specifies the width of a column in pixels and make the column non-resizable.\n   *\n   * e.g  `width={100}` */\n  width: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\n  /** Specifies the inital width of a column in pixels and allows the column to be resizable.\n   * It must be within the minColumnWidth and maxColumnWidth values passed to Table.\n   *\n   * e.g  `defaultWidth={100}`\n   */\n  defaultWidth: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\n  /** The data type to be used for data formatting in cell. */\n  type: _propTypes2.default.oneOf(['text', 'action'])\n};\nColumn.defaultProps = {\n  header: undefined,\n  component: undefined,\n  field: undefined,\n  sortable: false,\n  width: undefined,\n  defaultWidth: undefined,\n  type: 'text'\n};","map":{"version":3,"sources":["C:/Users/Marian/Desktop/My work/Licenta/Safe_Office/node_modules/react-rainbow-components/components/Column/index.js"],"names":["Object","defineProperty","exports","value","default","Column","_react","require","_react2","_interopRequireDefault","_propTypes","_propTypes2","obj","__esModule","createElement","propTypes","header","oneOfType","node","string","component","func","field","sortable","bool","width","number","defaultWidth","type","oneOf","defaultProps","undefined"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,MAAlB;;AAEA,IAAIC,MAAM,GAAGC,OAAO,CAAC,OAAD,CAApB;;AAEA,IAAIC,OAAO,GAAGC,sBAAsB,CAACH,MAAD,CAApC;;AAEA,IAAII,UAAU,GAAGH,OAAO,CAAC,YAAD,CAAxB;;AAEA,IAAII,WAAW,GAAGF,sBAAsB,CAACC,UAAD,CAAxC;;AAEA,SAASD,sBAAT,CAAgCG,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAER,IAAAA,OAAO,EAAEQ;AAAX,GAArC;AAAwD;AAE/F;AACA;AACA;;AACA;;;AACA,SAASP,MAAT,GAAkB;AAChB,SAAOG,OAAO,CAACJ,OAAR,CAAgBU,aAAhB,CAA8B,KAA9B,EAAqC,IAArC,CAAP;AACD;;AAEDT,MAAM,CAACU,SAAP,GAAmB;AACjB;AACF;AACA;AACA;AACEC,EAAAA,MAAM,EAAEL,WAAW,CAACP,OAAZ,CAAoBa,SAApB,CAA8B,CAACN,WAAW,CAACP,OAAZ,CAAoBc,IAArB,EAA2BP,WAAW,CAACP,OAAZ,CAAoBe,MAA/C,CAA9B,CALS;;AAMjB;AACF;AACA;AACA;AACA;AACEC,EAAAA,SAAS,EAAET,WAAW,CAACP,OAAZ,CAAoBiB,IAXd;;AAYjB;AACF;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,KAAK,EAAEX,WAAW,CAACP,OAAZ,CAAoBe,MAnBV;;AAoBjB;AACF;AACA;AACA;AACEI,EAAAA,QAAQ,EAAEZ,WAAW,CAACP,OAAZ,CAAoBoB,IAxBb;;AAyBjB;AACF;AACA;AACEC,EAAAA,KAAK,EAAEd,WAAW,CAACP,OAAZ,CAAoBa,SAApB,CAA8B,CAACN,WAAW,CAACP,OAAZ,CAAoBsB,MAArB,EAA6Bf,WAAW,CAACP,OAAZ,CAAoBe,MAAjD,CAA9B,CA5BU;;AA6BjB;AACF;AACA;AACA;AACA;AACEQ,EAAAA,YAAY,EAAEhB,WAAW,CAACP,OAAZ,CAAoBa,SAApB,CAA8B,CAACN,WAAW,CAACP,OAAZ,CAAoBsB,MAArB,EAA6Bf,WAAW,CAACP,OAAZ,CAAoBe,MAAjD,CAA9B,CAlCG;;AAmCjB;AACAS,EAAAA,IAAI,EAAEjB,WAAW,CAACP,OAAZ,CAAoByB,KAApB,CAA0B,CAAC,MAAD,EAAS,QAAT,CAA1B;AApCW,CAAnB;AAuCAxB,MAAM,CAACyB,YAAP,GAAsB;AACpBd,EAAAA,MAAM,EAAEe,SADY;AAEpBX,EAAAA,SAAS,EAAEW,SAFS;AAGpBT,EAAAA,KAAK,EAAES,SAHa;AAIpBR,EAAAA,QAAQ,EAAE,KAJU;AAKpBE,EAAAA,KAAK,EAAEM,SALa;AAMpBJ,EAAAA,YAAY,EAAEI,SANM;AAOpBH,EAAAA,IAAI,EAAE;AAPc,CAAtB","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = Column;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @category DataView\n */\n/* eslint-disable react/no-unused-prop-types */\nfunction Column() {\n  return _react2.default.createElement('div', null);\n}\n\nColumn.propTypes = {\n  /**\n   * The header of the column. it could just an String with text is going\n   * to be rendered or component with a desired content.\n   */\n  header: _propTypes2.default.oneOfType([_propTypes2.default.node, _propTypes2.default.string]),\n  /**\n   * The component class or function that is going to be use to render\n   * the content of each cell on this column. By default the cell is\n   * going to render the computed value(`data[rowIndex][field]`) for each cell.\n   */\n  component: _propTypes2.default.func,\n  /**\n   * The field value is used to compute/map the value is going to be render\n   * for each cell. it's the name of a property in the data objects.\n   *\n   * e.g `data = [{ name: 'Max', ... }, {...}]`;\n   * field could be 'name' for a column that want to represent names on a collection of people.\n   */\n  field: _propTypes2.default.string,\n  /**\n   * Sets whether the column should control the sorting order of the data.\n   * @ignore\n   */\n  sortable: _propTypes2.default.bool,\n  /** Specifies the width of a column in pixels and make the column non-resizable.\n   *\n   * e.g  `width={100}` */\n  width: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  /** Specifies the inital width of a column in pixels and allows the column to be resizable.\n   * It must be within the minColumnWidth and maxColumnWidth values passed to Table.\n   *\n   * e.g  `defaultWidth={100}`\n   */\n  defaultWidth: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  /** The data type to be used for data formatting in cell. */\n  type: _propTypes2.default.oneOf(['text', 'action'])\n};\n\nColumn.defaultProps = {\n  header: undefined,\n  component: undefined,\n  field: undefined,\n  sortable: false,\n  width: undefined,\n  defaultWidth: undefined,\n  type: 'text'\n};"]},"metadata":{},"sourceType":"script"}
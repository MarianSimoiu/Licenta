{"ast":null,"code":"import { BOOKINGS_CREATE_FAIL, BOOKINGS_CREATE_REQUEST, BOOKINGS_CREATE_SUCCESS, BOOKINGS_DELETE_FAIL, BOOKINGS_DELETE_REQUEST, BOOKINGS_DELETE_SUCCESS, BOOKINGS_LIST_FAIL, BOOKINGS_LIST_REQUEST, BOOKINGS_LIST_SUCCESS, BOOKINGS_UPDATE_FAIL, BOOKINGS_UPDATE_REQUEST, BOOKINGS_UPDATE_SUCCESS } from \"../constants/bookingsConstants\";\nimport axios from \"axios\";\nexport const listBookings = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: BOOKINGS_LIST_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/bookings`, config);\n    dispatch({\n      type: BOOKINGS_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: BOOKINGS_LIST_FAIL,\n      payload: message\n    });\n  }\n};\nexport const listUserBookings = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: BOOKINGS_LIST_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/bookings/`, {\n      params: {\n        user: userInfo._id\n      }\n    }, config);\n    dispatch({\n      type: BOOKINGS_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: BOOKINGS_LIST_FAIL,\n      payload: message\n    });\n  }\n};\nexport const createBookingAction = (city, address, floor, date, desk) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: BOOKINGS_CREATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/bookings/create`, {\n      city,\n      address,\n      floor,\n      date,\n      desk\n    }, config);\n    dispatch({\n      type: BOOKINGS_CREATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: BOOKINGS_CREATE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const deleteBookingAction = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: BOOKINGS_DELETE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.delete(`/api/bookings/${id}`, config);\n    dispatch({\n      type: BOOKINGS_DELETE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: BOOKINGS_DELETE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const updateBookingAction = (id, city, address, floor, date) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: BOOKINGS_UPDATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/bookings/${id}`, {\n      city,\n      address,\n      floor,\n      date\n    }, config);\n    dispatch({\n      type: BOOKINGS_UPDATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: BOOKINGS_UPDATE_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/Marian/Desktop/My work/Licenta/Safe_Office/frontend/src/actions/bookingsActions.js"],"names":["BOOKINGS_CREATE_FAIL","BOOKINGS_CREATE_REQUEST","BOOKINGS_CREATE_SUCCESS","BOOKINGS_DELETE_FAIL","BOOKINGS_DELETE_REQUEST","BOOKINGS_DELETE_SUCCESS","BOOKINGS_LIST_FAIL","BOOKINGS_LIST_REQUEST","BOOKINGS_LIST_SUCCESS","BOOKINGS_UPDATE_FAIL","BOOKINGS_UPDATE_REQUEST","BOOKINGS_UPDATE_SUCCESS","axios","listBookings","dispatch","getState","type","userLogin","userInfo","config","headers","Authorization","token","data","get","payload","error","message","response","listUserBookings","params","user","_id","createBookingAction","city","address","floor","date","desk","post","deleteBookingAction","id","delete","updateBookingAction","put"],"mappings":"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","sourcesContent":["import {\r\n  BOOKINGS_CREATE_FAIL,\r\n  BOOKINGS_CREATE_REQUEST,\r\n  BOOKINGS_CREATE_SUCCESS,\r\n  BOOKINGS_DELETE_FAIL,\r\n  BOOKINGS_DELETE_REQUEST,\r\n  BOOKINGS_DELETE_SUCCESS,\r\n  BOOKINGS_LIST_FAIL,\r\n  BOOKINGS_LIST_REQUEST,\r\n  BOOKINGS_LIST_SUCCESS,\r\n  BOOKINGS_UPDATE_FAIL,\r\n  BOOKINGS_UPDATE_REQUEST,\r\n  BOOKINGS_UPDATE_SUCCESS,\r\n} from \"../constants/bookingsConstants\";\r\nimport axios from \"axios\";\r\n\r\nexport const listBookings = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: BOOKINGS_LIST_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/bookings`, config);\r\n\r\n    dispatch({\r\n      type: BOOKINGS_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({\r\n      type: BOOKINGS_LIST_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listUserBookings = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: BOOKINGS_LIST_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/bookings/`, { params: { user: userInfo._id}}, config)\r\n\r\n    dispatch({\r\n      type: BOOKINGS_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({\r\n      type: BOOKINGS_LIST_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createBookingAction = (city, address, floor, date, desk) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: BOOKINGS_CREATE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      `/api/bookings/create`,\r\n      { city, address, floor, date, desk},\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type:  BOOKINGS_CREATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({\r\n      type: BOOKINGS_CREATE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteBookingAction = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: BOOKINGS_DELETE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.delete(`/api/bookings/${id}`, config);\r\n\r\n    dispatch({\r\n      type: BOOKINGS_DELETE_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({\r\n      type: BOOKINGS_DELETE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateBookingAction = (id, city, address, floor, date ) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: BOOKINGS_UPDATE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(\r\n      `/api/bookings/${id}`,\r\n      { city, address, floor, date },\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: BOOKINGS_UPDATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({\r\n      type: BOOKINGS_UPDATE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}
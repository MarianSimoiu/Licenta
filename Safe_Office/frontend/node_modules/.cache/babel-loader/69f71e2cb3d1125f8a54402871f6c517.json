{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nexports.default = getColumns;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _ = require('./');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n}\n\nfunction getDefaultWidth(defaultWidth, minColumnWidth, maxColumnWidth) {\n  var minColWidth = Number(minColumnWidth);\n  var maxColWidth = Number(maxColumnWidth);\n  var defaultWidtNumber = Number(defaultWidth);\n\n  if (minColWidth >= defaultWidtNumber) {\n    return minColWidth;\n  }\n\n  if (maxColWidth <= defaultWidtNumber) {\n    return maxColWidth;\n  }\n\n  return defaultWidtNumber || undefined;\n}\n\nfunction getColumns(params) {\n  var _params$children = params.children,\n      children = _params$children === undefined ? [] : _params$children,\n      showCheckboxColumn = params.showCheckboxColumn,\n      minColumnWidth = params.minColumnWidth,\n      maxColumnWidth = params.maxColumnWidth;\n\n  var columnsData = _react2.default.Children.map(children, function (column) {\n    if (column && column.props) {\n      var _column$props = column.props,\n          type = _column$props.type,\n          width = _column$props.width,\n          defaultWidth = _column$props.defaultWidth;\n      var widthNumber = Number(width);\n\n      if (type === 'action') {\n        return _extends({}, column.props, {\n          width: widthNumber || 50\n        });\n      }\n\n      return _extends({}, column.props, {\n        width: widthNumber || undefined,\n        defaultWidth: getDefaultWidth(defaultWidth, minColumnWidth, maxColumnWidth)\n      });\n    }\n\n    return null;\n  }, null);\n\n  if (showCheckboxColumn) {\n    return [{\n      type: _.SELECTABLE_CHECKBOX,\n      width: 52\n    }].concat(_toConsumableArray(columnsData));\n  }\n\n  return columnsData;\n}","map":{"version":3,"sources":["C:/Users/Marian/Desktop/My work/Licenta/Safe_Office/node_modules/react-rainbow-components/components/Table/helpers/columns/getColumns.js"],"names":["Object","defineProperty","exports","value","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","default","getColumns","_react","require","_react2","_interopRequireDefault","_","obj","__esModule","_toConsumableArray","arr","Array","isArray","arr2","from","getDefaultWidth","defaultWidth","minColumnWidth","maxColumnWidth","minColWidth","Number","maxColWidth","defaultWidtNumber","undefined","params","_params$children","children","showCheckboxColumn","columnsData","Children","map","column","props","_column$props","type","width","widthNumber","SELECTABLE_CHECKBOX","concat"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports.default = getColumns;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _ = require('./');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction getDefaultWidth(defaultWidth, minColumnWidth, maxColumnWidth) {\n    var minColWidth = Number(minColumnWidth);\n    var maxColWidth = Number(maxColumnWidth);\n    var defaultWidtNumber = Number(defaultWidth);\n\n    if (minColWidth >= defaultWidtNumber) {\n        return minColWidth;\n    }\n    if (maxColWidth <= defaultWidtNumber) {\n        return maxColWidth;\n    }\n    return defaultWidtNumber || undefined;\n}\n\nfunction getColumns(params) {\n    var _params$children = params.children,\n        children = _params$children === undefined ? [] : _params$children,\n        showCheckboxColumn = params.showCheckboxColumn,\n        minColumnWidth = params.minColumnWidth,\n        maxColumnWidth = params.maxColumnWidth;\n\n\n    var columnsData = _react2.default.Children.map(children, function (column) {\n        if (column && column.props) {\n            var _column$props = column.props,\n                type = _column$props.type,\n                width = _column$props.width,\n                defaultWidth = _column$props.defaultWidth;\n\n            var widthNumber = Number(width);\n            if (type === 'action') {\n                return _extends({}, column.props, {\n                    width: widthNumber || 50\n                });\n            }\n            return _extends({}, column.props, {\n                width: widthNumber || undefined,\n                defaultWidth: getDefaultWidth(defaultWidth, minColumnWidth, maxColumnWidth)\n            });\n        }\n        return null;\n    }, null);\n\n    if (showCheckboxColumn) {\n        return [{\n            type: _.SELECTABLE_CHECKBOX,\n            width: 52\n        }].concat(_toConsumableArray(columnsData));\n    }\n    return columnsData;\n}"]},"metadata":{},"sourceType":"script"}
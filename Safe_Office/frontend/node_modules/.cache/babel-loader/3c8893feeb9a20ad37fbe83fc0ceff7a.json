{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nexports.default = getUpdatedRowsWhenSelect;\n\nvar _getStartRowKey = require('./getStartRowKey');\n\nvar _getStartRowKey2 = _interopRequireDefault(_getStartRowKey);\n\nvar _getCurrentSelectionLength = require('./getCurrentSelectionLength');\n\nvar _getCurrentSelectionLength2 = _interopRequireDefault(_getCurrentSelectionLength);\n\nvar _getRowIntervalIndexes = require('./getRowIntervalIndexes');\n\nvar _getRowIntervalIndexes2 = _interopRequireDefault(_getRowIntervalIndexes);\n\nvar _isSelectedRow = require('./isSelectedRow');\n\nvar _isSelectedRow2 = _interopRequireDefault(_isSelectedRow);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction getUpdatedRowsWhenSelect() {\n  var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var maxRowSelection = params.maxRowSelection,\n      _params$rows = params.rows,\n      rows = _params$rows === undefined ? [] : _params$rows,\n      _params$indexes = params.indexes,\n      indexes = _params$indexes === undefined ? {} : _params$indexes,\n      isMultiple = params.isMultiple,\n      rowKeyValue = params.rowKeyValue,\n      lastSelectedRowKey = params.lastSelectedRowKey,\n      _params$selectedRowsK = params.selectedRowsKeys,\n      selectedRowsKeys = _params$selectedRowsK === undefined ? {} : _params$selectedRowsK;\n\n  if (maxRowSelection > 1) {\n    var startRowKey = (0, _getStartRowKey2.default)({\n      isMultiple: isMultiple,\n      rowKeyValue: rowKeyValue,\n      indexes: indexes,\n      lastSelectedRowKey: lastSelectedRowKey\n    });\n\n    var _getRowIntervalIndexe = (0, _getRowIntervalIndexes2.default)({\n      indexes: indexes,\n      startRowKey: startRowKey,\n      endRowKey: rowKeyValue\n    }),\n        start = _getRowIntervalIndexe.start,\n        end = _getRowIntervalIndexe.end;\n\n    var rowsWithSelection = rows.map(function (row, index) {\n      var currentSelectionLength = (0, _getCurrentSelectionLength2.default)(selectedRowsKeys);\n      var maxSelectionReached = currentSelectionLength >= maxRowSelection;\n\n      if (index >= start && index <= end && !maxSelectionReached) {\n        selectedRowsKeys[row.key] = true;\n        return _extends({}, row, {\n          isSelected: true\n        });\n      }\n\n      return row;\n    });\n    return rowsWithSelection.map(function (row) {\n      var maxSelectionReached = (0, _getCurrentSelectionLength2.default)(selectedRowsKeys) === maxRowSelection;\n\n      if (maxSelectionReached && !(0, _isSelectedRow2.default)(selectedRowsKeys, row.key)) {\n        return _extends({}, row, {\n          isDisabled: true\n        });\n      }\n\n      return row;\n    });\n  }\n\n  return rows.map(function (row) {\n    if (selectedRowsKeys[row.key]) {\n      return _extends({}, row, {\n        isSelected: true\n      });\n    }\n\n    return _extends({}, row, {\n      isSelected: false\n    });\n  });\n}","map":{"version":3,"sources":["C:/Users/Marian/Desktop/My work/Licenta/Safe_Office/node_modules/react-rainbow-components/components/Table/helpers/selector/getUpdatedRowsWhenSelect.js"],"names":["Object","defineProperty","exports","value","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","default","getUpdatedRowsWhenSelect","_getStartRowKey","require","_getStartRowKey2","_interopRequireDefault","_getCurrentSelectionLength","_getCurrentSelectionLength2","_getRowIntervalIndexes","_getRowIntervalIndexes2","_isSelectedRow","_isSelectedRow2","obj","__esModule","params","undefined","maxRowSelection","_params$rows","rows","_params$indexes","indexes","isMultiple","rowKeyValue","lastSelectedRowKey","_params$selectedRowsK","selectedRowsKeys","startRowKey","_getRowIntervalIndexe","endRowKey","start","end","rowsWithSelection","map","row","index","currentSelectionLength","maxSelectionReached","isSelected","isDisabled"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports.default = getUpdatedRowsWhenSelect;\n\nvar _getStartRowKey = require('./getStartRowKey');\n\nvar _getStartRowKey2 = _interopRequireDefault(_getStartRowKey);\n\nvar _getCurrentSelectionLength = require('./getCurrentSelectionLength');\n\nvar _getCurrentSelectionLength2 = _interopRequireDefault(_getCurrentSelectionLength);\n\nvar _getRowIntervalIndexes = require('./getRowIntervalIndexes');\n\nvar _getRowIntervalIndexes2 = _interopRequireDefault(_getRowIntervalIndexes);\n\nvar _isSelectedRow = require('./isSelectedRow');\n\nvar _isSelectedRow2 = _interopRequireDefault(_isSelectedRow);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction getUpdatedRowsWhenSelect() {\n    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var maxRowSelection = params.maxRowSelection,\n        _params$rows = params.rows,\n        rows = _params$rows === undefined ? [] : _params$rows,\n        _params$indexes = params.indexes,\n        indexes = _params$indexes === undefined ? {} : _params$indexes,\n        isMultiple = params.isMultiple,\n        rowKeyValue = params.rowKeyValue,\n        lastSelectedRowKey = params.lastSelectedRowKey,\n        _params$selectedRowsK = params.selectedRowsKeys,\n        selectedRowsKeys = _params$selectedRowsK === undefined ? {} : _params$selectedRowsK;\n\n\n    if (maxRowSelection > 1) {\n        var startRowKey = (0, _getStartRowKey2.default)({\n            isMultiple: isMultiple,\n            rowKeyValue: rowKeyValue,\n            indexes: indexes,\n            lastSelectedRowKey: lastSelectedRowKey\n        });\n\n        var _getRowIntervalIndexe = (0, _getRowIntervalIndexes2.default)({\n            indexes: indexes,\n            startRowKey: startRowKey,\n            endRowKey: rowKeyValue\n        }),\n            start = _getRowIntervalIndexe.start,\n            end = _getRowIntervalIndexe.end;\n\n        var rowsWithSelection = rows.map(function (row, index) {\n            var currentSelectionLength = (0, _getCurrentSelectionLength2.default)(selectedRowsKeys);\n            var maxSelectionReached = currentSelectionLength >= maxRowSelection;\n            if (index >= start && index <= end && !maxSelectionReached) {\n                selectedRowsKeys[row.key] = true;\n                return _extends({}, row, {\n                    isSelected: true\n                });\n            }\n            return row;\n        });\n\n        return rowsWithSelection.map(function (row) {\n            var maxSelectionReached = (0, _getCurrentSelectionLength2.default)(selectedRowsKeys) === maxRowSelection;\n\n            if (maxSelectionReached && !(0, _isSelectedRow2.default)(selectedRowsKeys, row.key)) {\n                return _extends({}, row, {\n                    isDisabled: true\n                });\n            }\n            return row;\n        });\n    }\n\n    return rows.map(function (row) {\n        if (selectedRowsKeys[row.key]) {\n            return _extends({}, row, {\n                isSelected: true\n            });\n        }\n        return _extends({}, row, {\n            isSelected: false\n        });\n    });\n}"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = getTotalWidthsMetadata;\n/* eslint-disable no-param-reassign */\n\nfunction getTotalWidthsMetadata(params) {\n  var columns = params.columns,\n      minColumnWidth = params.minColumnWidth,\n      maxColumnWidth = params.maxColumnWidth;\n  var initial = {\n    totalFixedWidth: 0,\n    totalFixedColumns: 0,\n    totalResizedWidth: 0,\n    totalResizedColumns: 0,\n    totalFlexibleColumns: 0,\n    minColumnWidth: minColumnWidth,\n    maxColumnWidth: maxColumnWidth\n  };\n  return columns.reduce(function (prev, col, index) {\n    var currentColumn = columns[index];\n\n    if (col.width) {\n      prev.totalFixedWidth += col.width;\n      prev.totalFixedColumns += 1;\n    } else if (currentColumn.isResized) {\n      prev.totalResizedWidth += currentColumn.computedWidth;\n      prev.totalResizedColumns += 1;\n    } else if (col.defaultWidth) {\n      prev.totalResizedWidth += col.defaultWidth;\n      prev.totalResizedColumns += 1;\n    } else {\n      prev.totalFlexibleColumns += 1;\n    }\n\n    return prev;\n  }, initial);\n}","map":{"version":3,"sources":["C:/Users/Marian/Desktop/My work/Licenta/Safe_Office/node_modules/react-rainbow-components/components/Table/helpers/resizer/getTotalWidthsMetadata.js"],"names":["Object","defineProperty","exports","value","default","getTotalWidthsMetadata","params","columns","minColumnWidth","maxColumnWidth","initial","totalFixedWidth","totalFixedColumns","totalResizedWidth","totalResizedColumns","totalFlexibleColumns","reduce","prev","col","index","currentColumn","width","isResized","computedWidth","defaultWidth"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AACzCC,EAAAA,KAAK,EAAE;AADkC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,sBAAlB;AACA;;AACA,SAASA,sBAAT,CAAgCC,MAAhC,EAAwC;AACpC,MAAIC,OAAO,GAAGD,MAAM,CAACC,OAArB;AAAA,MACIC,cAAc,GAAGF,MAAM,CAACE,cAD5B;AAAA,MAEIC,cAAc,GAAGH,MAAM,CAACG,cAF5B;AAIA,MAAIC,OAAO,GAAG;AACVC,IAAAA,eAAe,EAAE,CADP;AAEVC,IAAAA,iBAAiB,EAAE,CAFT;AAGVC,IAAAA,iBAAiB,EAAE,CAHT;AAIVC,IAAAA,mBAAmB,EAAE,CAJX;AAKVC,IAAAA,oBAAoB,EAAE,CALZ;AAMVP,IAAAA,cAAc,EAAEA,cANN;AAOVC,IAAAA,cAAc,EAAEA;AAPN,GAAd;AAUA,SAAOF,OAAO,CAACS,MAAR,CAAe,UAAUC,IAAV,EAAgBC,GAAhB,EAAqBC,KAArB,EAA4B;AAC9C,QAAIC,aAAa,GAAGb,OAAO,CAACY,KAAD,CAA3B;;AACA,QAAID,GAAG,CAACG,KAAR,EAAe;AACXJ,MAAAA,IAAI,CAACN,eAAL,IAAwBO,GAAG,CAACG,KAA5B;AACAJ,MAAAA,IAAI,CAACL,iBAAL,IAA0B,CAA1B;AACH,KAHD,MAGO,IAAIQ,aAAa,CAACE,SAAlB,EAA6B;AAChCL,MAAAA,IAAI,CAACJ,iBAAL,IAA0BO,aAAa,CAACG,aAAxC;AACAN,MAAAA,IAAI,CAACH,mBAAL,IAA4B,CAA5B;AACH,KAHM,MAGA,IAAII,GAAG,CAACM,YAAR,EAAsB;AACzBP,MAAAA,IAAI,CAACJ,iBAAL,IAA0BK,GAAG,CAACM,YAA9B;AACAP,MAAAA,IAAI,CAACH,mBAAL,IAA4B,CAA5B;AACH,KAHM,MAGA;AACHG,MAAAA,IAAI,CAACF,oBAAL,IAA6B,CAA7B;AACH;;AACD,WAAOE,IAAP;AACH,GAfM,EAeJP,OAfI,CAAP;AAgBH","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = getTotalWidthsMetadata;\n/* eslint-disable no-param-reassign */\nfunction getTotalWidthsMetadata(params) {\n    var columns = params.columns,\n        minColumnWidth = params.minColumnWidth,\n        maxColumnWidth = params.maxColumnWidth;\n\n    var initial = {\n        totalFixedWidth: 0,\n        totalFixedColumns: 0,\n        totalResizedWidth: 0,\n        totalResizedColumns: 0,\n        totalFlexibleColumns: 0,\n        minColumnWidth: minColumnWidth,\n        maxColumnWidth: maxColumnWidth\n    };\n\n    return columns.reduce(function (prev, col, index) {\n        var currentColumn = columns[index];\n        if (col.width) {\n            prev.totalFixedWidth += col.width;\n            prev.totalFixedColumns += 1;\n        } else if (currentColumn.isResized) {\n            prev.totalResizedWidth += currentColumn.computedWidth;\n            prev.totalResizedColumns += 1;\n        } else if (col.defaultWidth) {\n            prev.totalResizedWidth += col.defaultWidth;\n            prev.totalResizedColumns += 1;\n        } else {\n            prev.totalFlexibleColumns += 1;\n        }\n        return prev;\n    }, initial);\n}"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Marian\\\\Desktop\\\\My work\\\\Licenta\\\\Safe_Office\\\\frontend\\\\src\\\\screens\\\\Test\\\\test.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Select from 'react-select';\n\nfunction Test() {\n  _s();\n\n  const data = [{\n    value: 1,\n    label: \"cerulean\"\n  }, {\n    value: 2,\n    label: \"fuchsia rose\"\n  }, {\n    value: 3,\n    label: \"true red\"\n  }, {\n    value: 4,\n    label: \"aqua sky\"\n  }, {\n    value: 5,\n    label: \"tigerlily\"\n  }, {\n    value: 6,\n    label: \"blue turquoise\"\n  }]; // set value for default selection\n\n  const [selectedValue, setSelectedValue] = useState([]); // handle onChange event of the dropdown\n\n  const handleChange = e => {\n    setSelectedValue(Array.isArray(e) ? e.map(x => x.value) : []);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Get selected by only value for multi select - \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"https://www.cluemediator.com\",\n        children: \"Clue Mediator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 57\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      className: \"dropdown\",\n      placeholder: \"Select Option\",\n      value: data.filter(obj => selectedValue.includes(obj.value)) // set selected values\n      ,\n      options: data // set list of the data\n      ,\n      onChange: handleChange // assign onChange function\n      ,\n      isMulti: true,\n      isClearable: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), selectedValue && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 20,\n        lineHeight: '25px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Selected Value: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 14\n        }, this), \" \", JSON.stringify(selectedValue, null, 2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Test, \"CwegKhrv7C1L2PY7F1ew08VZxPY=\");\n\n_c = Test;\nexport default Test;\n\nvar _c;\n\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"sources":["C:/Users/Marian/Desktop/My work/Licenta/Safe_Office/frontend/src/screens/Test/test.js"],"names":["React","useState","Select","Test","data","value","label","selectedValue","setSelectedValue","handleChange","e","Array","isArray","map","x","filter","obj","includes","marginTop","lineHeight","JSON","stringify"],"mappings":";;;;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,cAAnB;;AAEA,SAASC,IAAT,GAAgB;AAAA;;AACd,QAAMC,IAAI,GAAG,CACX;AACEC,IAAAA,KAAK,EAAE,CADT;AAEEC,IAAAA,KAAK,EAAE;AAFT,GADW,EAKX;AACED,IAAAA,KAAK,EAAE,CADT;AAEEC,IAAAA,KAAK,EAAE;AAFT,GALW,EASX;AACED,IAAAA,KAAK,EAAE,CADT;AAEEC,IAAAA,KAAK,EAAE;AAFT,GATW,EAaX;AACED,IAAAA,KAAK,EAAE,CADT;AAEEC,IAAAA,KAAK,EAAE;AAFT,GAbW,EAiBX;AACED,IAAAA,KAAK,EAAE,CADT;AAEEC,IAAAA,KAAK,EAAE;AAFT,GAjBW,EAqBX;AACED,IAAAA,KAAK,EAAE,CADT;AAEEC,IAAAA,KAAK,EAAE;AAFT,GArBW,CAAb,CADc,CA4Bd;;AACA,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCP,QAAQ,CAAC,EAAD,CAAlD,CA7Bc,CA+Bd;;AACA,QAAMQ,YAAY,GAAIC,CAAD,IAAO;AAC1BF,IAAAA,gBAAgB,CAACG,KAAK,CAACC,OAAN,CAAcF,CAAd,IAAmBA,CAAC,CAACG,GAAF,CAAMC,CAAC,IAAIA,CAAC,CAACT,KAAb,CAAnB,GAAyC,EAA1C,CAAhB;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA,gFAAkD;AAAG,QAAA,IAAI,EAAC,8BAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAlD;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAGE,QAAC,MAAD;AACE,MAAA,SAAS,EAAC,UADZ;AAEE,MAAA,WAAW,EAAC,eAFd;AAGE,MAAA,KAAK,EAAED,IAAI,CAACW,MAAL,CAAYC,GAAG,IAAIT,aAAa,CAACU,QAAd,CAAuBD,GAAG,CAACX,KAA3B,CAAnB,CAHT,CAGgE;AAHhE;AAIE,MAAA,OAAO,EAAED,IAJX,CAIiB;AAJjB;AAKE,MAAA,QAAQ,EAAEK,YALZ,CAK0B;AAL1B;AAME,MAAA,OAAO,MANT;AAOE,MAAA,WAAW;AAPb;AAAA;AAAA;AAAA;AAAA,YAHF,EAaGF,aAAa,iBAAI;AAAK,MAAA,KAAK,EAAE;AAAEW,QAAAA,SAAS,EAAE,EAAb;AAAiBC,QAAAA,UAAU,EAAE;AAA7B,OAAZ;AAAA,6BAChB;AAAA,gCAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAL,OAA8BC,IAAI,CAACC,SAAL,CAAed,aAAf,EAA8B,IAA9B,EAAoC,CAApC,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AADgB;AAAA;AAAA;AAAA;AAAA,YAbpB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;GAvDQJ,I;;KAAAA,I;AAyDT,eAAeA,IAAf","sourcesContent":["\r\nimport React, { useState } from 'react';\r\nimport Select from 'react-select';\r\n \r\nfunction Test() {\r\n  const data = [\r\n    {\r\n      value: 1,\r\n      label: \"cerulean\"\r\n    },\r\n    {\r\n      value: 2,\r\n      label: \"fuchsia rose\"\r\n    },\r\n    {\r\n      value: 3,\r\n      label: \"true red\"\r\n    },\r\n    {\r\n      value: 4,\r\n      label: \"aqua sky\"\r\n    },\r\n    {\r\n      value: 5,\r\n      label: \"tigerlily\"\r\n    },\r\n    {\r\n      value: 6,\r\n      label: \"blue turquoise\"\r\n    }\r\n  ];\r\n \r\n  // set value for default selection\r\n  const [selectedValue, setSelectedValue] = useState([]);\r\n \r\n  // handle onChange event of the dropdown\r\n  const handleChange = (e) => {\r\n    setSelectedValue(Array.isArray(e) ? e.map(x => x.value) : []);\r\n  }\r\n \r\n  return (\r\n    <div className=\"App\">\r\n      <h3>Get selected by only value for multi select - <a href=\"https://www.cluemediator.com\">Clue Mediator</a></h3>\r\n \r\n      <Select\r\n        className=\"dropdown\"\r\n        placeholder=\"Select Option\"\r\n        value={data.filter(obj => selectedValue.includes(obj.value))} // set selected values\r\n        options={data} // set list of the data\r\n        onChange={handleChange} // assign onChange function\r\n        isMulti\r\n        isClearable\r\n      />\r\n \r\n      {selectedValue && <div style={{ marginTop: 20, lineHeight: '25px' }}>\r\n        <div><b>Selected Value: </b> {JSON.stringify(selectedValue, null, 2)}</div>\r\n      </div>}\r\n    </div>\r\n  );\r\n}\r\n \r\nexport default Test;"]},"metadata":{},"sourceType":"module"}
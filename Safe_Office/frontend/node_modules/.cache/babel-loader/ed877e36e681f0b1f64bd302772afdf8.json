{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Marian\\\\Desktop\\\\My work\\\\Licenta\\\\Safe_Office\\\\frontend\\\\src\\\\screens\\\\ProfileScreen\\\\ProfileScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\nimport MainScreen from \"../../components/MainMenu\";\nimport \"./ProfileScreen.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { updateProfile } from \"../../actions/userActions\";\nimport Loading from \"../../components/Loading\";\nimport ErrorMessage from \"../../components/ErrorMessage\";\n\nconst ProfileScreen = ({\n  location,\n  history\n}) => {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [pic, setPic] = useState();\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [picMessage, setPicMessage] = useState();\n  const dispatch = useDispatch();\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  const userUpdate = useSelector(state => state.userUpdate);\n  const {\n    loading,\n    error,\n    success\n  } = userUpdate;\n  useEffect(() => {\n    if (!userInfo) {\n      history.push(\"/\");\n    } else {\n      setName(userInfo.name);\n      setEmail(userInfo.email);\n      setPic(userInfo.pic);\n    }\n  }, [history, userInfo]);\n\n  const postDetails = pics => {\n    setPicMessage(null);\n\n    if (pics.type === \"image/jpeg\" || pics.type === \"image/png\") {\n      const data = new FormData();\n      data.append(\"file\", pics);\n      data.append(\"upload_preset\", \"notezipper\");\n      data.append(\"cloud_name\", \"piyushproj\");\n      fetch(\"https://api.cloudinary.com/v1_1/piyushproj/image/upload\", {\n        method: \"post\",\n        body: data\n      }).then(res => res.json()).then(data => {\n        setPic(data.url.toString());\n        console.log(pic);\n      }).catch(err => {\n        console.log(err);\n      });\n    } else {\n      return setPicMessage(\"Please Select an Image\");\n    }\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(updateProfile({\n      name,\n      email,\n      password,\n      pic\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Yes\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n  /*\r\n   return (\r\n     <MainScreen title=\"EDIT PROFILE\">\r\n       <div>\r\n         <Row className=\"profileContainer\">\r\n           <Col md={6}>\r\n             <Form onSubmit={submitHandler}>\r\n               {loading && <Loading />}\r\n               {success && (\r\n                 <ErrorMessage variant=\"success\">\r\n                   Updated Successfully\r\n                 </ErrorMessage>\r\n               )}\r\n               {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\r\n               <Form.Group controlId=\"name\">\r\n                 <Form.Label>Name</Form.Label>\r\n                 <Form.Control\r\n                   type=\"text\"\r\n                   placeholder=\"Enter Name\"\r\n                   value={name}\r\n                   onChange={(e) => setName(e.target.value)}\r\n                 ></Form.Control>\r\n               </Form.Group>\r\n               <Form.Group controlId=\"email\">\r\n                 <Form.Label>Email Address</Form.Label>\r\n                 <Form.Control\r\n                   type=\"email\"\r\n                   placeholder=\"Enter Email\"\r\n                   value={email}\r\n                   onChange={(e) => setEmail(e.target.value)}\r\n                 ></Form.Control>\r\n               </Form.Group>\r\n               <Form.Group controlId=\"password\">\r\n                 <Form.Label>Password</Form.Label>\r\n                 <Form.Control\r\n                   type=\"password\"\r\n                   placeholder=\"Enter Password\"\r\n                   value={password}\r\n                   onChange={(e) => setPassword(e.target.value)}\r\n                 ></Form.Control>\r\n               </Form.Group>\r\n               <Form.Group controlId=\"confirmPassword\">\r\n                 <Form.Label>Confirm Password</Form.Label>\r\n                 <Form.Control\r\n                   type=\"password\"\r\n                   placeholder=\"Confirm Password\"\r\n                   value={confirmPassword}\r\n                   onChange={(e) => setConfirmPassword(e.target.value)}\r\n                 ></Form.Control>\r\n               </Form.Group>{\" \"}\r\n               {picMessage && (\r\n                 <ErrorMessage variant=\"danger\">{picMessage}</ErrorMessage>\r\n               )}\r\n               <Form.Group controlId=\"pic\">\r\n                 <Form.Label>Change Profile Picture</Form.Label>\r\n                 <Form.File\r\n                   onChange={(e) => postDetails(e.target.files[0])}\r\n                   id=\"custom-file\"\r\n                   type=\"image/png\"\r\n                   label=\"Upload Profile Picture\"\r\n                   custom\r\n                 />\r\n               </Form.Group>\r\n               <Button type=\"submit\" varient=\"primary\">\r\n                 Update\r\n               </Button>\r\n             </Form>\r\n           </Col>\r\n           <Col\r\n             style={{\r\n               display: \"flex\",\r\n               alignItems: \"center\",\r\n               justifyContent: \"center\",\r\n             }}\r\n           >\r\n             <img src={pic} alt={name} className=\"profilePic\" />\r\n           </Col>\r\n         </Row>\r\n       </div>\r\n     </MainScreen>\r\n   );\r\n  };\r\n  */\n};\n\n_s(ProfileScreen, \"tV65XSKZemTT0A/9MHrg/IupteU=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = ProfileScreen;\nexport default ProfileScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileScreen\");","map":{"version":3,"sources":["C:/Users/Marian/Desktop/My work/Licenta/Safe_Office/frontend/src/screens/ProfileScreen/ProfileScreen.js"],"names":["React","useState","useEffect","Form","Button","Row","Col","MainScreen","useDispatch","useSelector","updateProfile","Loading","ErrorMessage","ProfileScreen","location","history","name","setName","email","setEmail","pic","setPic","password","setPassword","confirmPassword","setConfirmPassword","picMessage","setPicMessage","dispatch","userLogin","state","userInfo","userUpdate","loading","error","success","push","postDetails","pics","type","data","FormData","append","fetch","method","body","then","res","json","url","toString","console","log","catch","err","submitHandler","e","preventDefault"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport MainScreen from \"../../components/MainMenu\";\r\nimport \"./ProfileScreen.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateProfile } from \"../../actions/userActions\";\r\nimport Loading from \"../../components/Loading\";\r\nimport ErrorMessage from \"../../components/ErrorMessage\";\r\n\r\nconst ProfileScreen = ({ location, history }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [pic, setPic] = useState();\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [picMessage, setPicMessage] = useState();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userUpdate = useSelector((state) => state.userUpdate);\r\n  const { loading, error, success } = userUpdate;\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/\");\r\n    } else {\r\n      setName(userInfo.name);\r\n      setEmail(userInfo.email);\r\n      setPic(userInfo.pic);\r\n    }\r\n  }, [history, userInfo]);\r\n\r\n  const postDetails = (pics) => {\r\n    setPicMessage(null);\r\n    if (pics.type === \"image/jpeg\" || pics.type === \"image/png\") {\r\n      const data = new FormData();\r\n      data.append(\"file\", pics);\r\n      data.append(\"upload_preset\", \"notezipper\");\r\n      data.append(\"cloud_name\", \"piyushproj\");\r\n      fetch(\"https://api.cloudinary.com/v1_1/piyushproj/image/upload\", {\r\n        method: \"post\",\r\n        body: data,\r\n      })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          setPic(data.url.toString());\r\n          console.log(pic);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    } else {\r\n      return setPicMessage(\"Please Select an Image\");\r\n    }\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    dispatch(updateProfile({ name, email, password, pic }));\r\n  };\r\n\r\n  return(\r\n    <div>\r\n    Yes\r\n    </div>\r\n  )\r\n /*\r\n  return (\r\n    <MainScreen title=\"EDIT PROFILE\">\r\n      <div>\r\n        <Row className=\"profileContainer\">\r\n          <Col md={6}>\r\n            <Form onSubmit={submitHandler}>\r\n              {loading && <Loading />}\r\n              {success && (\r\n                <ErrorMessage variant=\"success\">\r\n                  Updated Successfully\r\n                </ErrorMessage>\r\n              )}\r\n              {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\r\n              <Form.Group controlId=\"name\">\r\n                <Form.Label>Name</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Enter Name\"\r\n                  value={name}\r\n                  onChange={(e) => setName(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"email\">\r\n                <Form.Label>Email Address</Form.Label>\r\n                <Form.Control\r\n                  type=\"email\"\r\n                  placeholder=\"Enter Email\"\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"password\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  placeholder=\"Enter Password\"\r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"confirmPassword\">\r\n                <Form.Label>Confirm Password</Form.Label>\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  placeholder=\"Confirm Password\"\r\n                  value={confirmPassword}\r\n                  onChange={(e) => setConfirmPassword(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>{\" \"}\r\n              {picMessage && (\r\n                <ErrorMessage variant=\"danger\">{picMessage}</ErrorMessage>\r\n              )}\r\n              <Form.Group controlId=\"pic\">\r\n                <Form.Label>Change Profile Picture</Form.Label>\r\n                <Form.File\r\n                  onChange={(e) => postDetails(e.target.files[0])}\r\n                  id=\"custom-file\"\r\n                  type=\"image/png\"\r\n                  label=\"Upload Profile Picture\"\r\n                  custom\r\n                />\r\n              </Form.Group>\r\n              <Button type=\"submit\" varient=\"primary\">\r\n                Update\r\n              </Button>\r\n            </Form>\r\n          </Col>\r\n          <Col\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <img src={pic} alt={name} className=\"profilePic\" />\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </MainScreen>\r\n  );\r\n};\r\n*/\r\n}\r\nexport default ProfileScreen;\r\n"]},"metadata":{},"sourceType":"module"}
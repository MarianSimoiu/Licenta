{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = ProgressBar;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _AssistiveText = require('./../AssistiveText');\n\nvar _AssistiveText2 = _interopRequireDefault(_AssistiveText);\n\nvar _normalizeValue = require('./normalizeValue');\n\nvar _normalizeValue2 = _interopRequireDefault(_normalizeValue);\n\nrequire('./styles.css');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Progress bar component communicates to the user the progress of a particular process.\n */\n\n\nfunction ProgressBar(props) {\n  var className = props.className,\n      style = props.style,\n      assistiveText = props.assistiveText,\n      value = props.value,\n      size = props.size,\n      variant = props.variant;\n\n  var getContainerClassNames = function getContainerClassNames() {\n    return (0, _classnames2.default)('rainbow-progress-bar', 'rainbow-progress-bar--' + size, {\n      'rainbow-progress-bar--success': variant === 'success'\n    }, className);\n  };\n\n  var getProgressBarClassNames = function getProgressBarClassNames() {\n    return (0, _classnames2.default)('rainbow-progress-bar_value', {\n      'rainbow-progress-bar_value--success': variant === 'success'\n    });\n  };\n\n  var normalizedValue = (0, _normalizeValue2.default)(value);\n  var WIDTH = {\n    width: normalizedValue + '%'\n  };\n  return _react2.default.createElement('div', {\n    className: getContainerClassNames(),\n    'aria-valuemin': '0',\n    'aria-valuemax': '100',\n    'aria-valuenow': normalizedValue,\n    role: 'progressbar',\n    style: style\n  }, _react2.default.createElement('span', {\n    className: getProgressBarClassNames(),\n    style: WIDTH\n  }, _react2.default.createElement(_AssistiveText2.default, {\n    text: assistiveText\n  })));\n}\n\nProgressBar.propTypes = {\n  /** The percentage value of the progress bar. It must be between 0 and 100. */\n  value: _propTypes2.default.number,\n\n  /** The size of the progress bar. Valid values are x-small, small, medium, and large.\n   * The default value is medium. */\n  size: _propTypes2.default.oneOf(['x-small', 'small', 'medium', 'large']),\n\n  /** The variant of the progress bar. Valid values are brand and success. */\n  variant: _propTypes2.default.oneOf(['brand', 'success']),\n\n  /** A description for assistive sreen readers. */\n  assistiveText: _propTypes2.default.string,\n\n  /** A CSS class for the outer element, in addition to the component's base classes. */\n  className: _propTypes2.default.string,\n\n  /** An object with custom style applied to the outer element. */\n  style: _propTypes2.default.object\n};\nProgressBar.defaultProps = {\n  value: 0,\n  size: 'medium',\n  variant: 'brand',\n  assistiveText: '',\n  className: undefined,\n  style: undefined\n};","map":{"version":3,"sources":["C:/Users/Marian/Desktop/My work/Licenta/Safe_Office/node_modules/react-rainbow-components/components/ProgressBar/index.js"],"names":["Object","defineProperty","exports","value","default","ProgressBar","_react","require","_react2","_interopRequireDefault","_propTypes","_propTypes2","_classnames","_classnames2","_AssistiveText","_AssistiveText2","_normalizeValue","_normalizeValue2","obj","__esModule","props","className","style","assistiveText","size","variant","getContainerClassNames","getProgressBarClassNames","normalizedValue","WIDTH","width","createElement","role","text","propTypes","number","oneOf","string","object","defaultProps","undefined"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AACzCC,EAAAA,KAAK,EAAE;AADkC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,WAAlB;;AAEA,IAAIC,MAAM,GAAGC,OAAO,CAAC,OAAD,CAApB;;AAEA,IAAIC,OAAO,GAAGC,sBAAsB,CAACH,MAAD,CAApC;;AAEA,IAAII,UAAU,GAAGH,OAAO,CAAC,YAAD,CAAxB;;AAEA,IAAII,WAAW,GAAGF,sBAAsB,CAACC,UAAD,CAAxC;;AAEA,IAAIE,WAAW,GAAGL,OAAO,CAAC,YAAD,CAAzB;;AAEA,IAAIM,YAAY,GAAGJ,sBAAsB,CAACG,WAAD,CAAzC;;AAEA,IAAIE,cAAc,GAAGP,OAAO,CAAC,oBAAD,CAA5B;;AAEA,IAAIQ,eAAe,GAAGN,sBAAsB,CAACK,cAAD,CAA5C;;AAEA,IAAIE,eAAe,GAAGT,OAAO,CAAC,kBAAD,CAA7B;;AAEA,IAAIU,gBAAgB,GAAGR,sBAAsB,CAACO,eAAD,CAA7C;;AAEAT,OAAO,CAAC,cAAD,CAAP;;AAEA,SAASE,sBAAT,CAAgCS,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEd,IAAAA,OAAO,EAAEc;AAAX,GAArC;AAAwD;AAE/F;AACA;AACA;;;AACA,SAASb,WAAT,CAAqBe,KAArB,EAA4B;AACxB,MAAIC,SAAS,GAAGD,KAAK,CAACC,SAAtB;AAAA,MACIC,KAAK,GAAGF,KAAK,CAACE,KADlB;AAAA,MAEIC,aAAa,GAAGH,KAAK,CAACG,aAF1B;AAAA,MAGIpB,KAAK,GAAGiB,KAAK,CAACjB,KAHlB;AAAA,MAIIqB,IAAI,GAAGJ,KAAK,CAACI,IAJjB;AAAA,MAKIC,OAAO,GAAGL,KAAK,CAACK,OALpB;;AAQA,MAAIC,sBAAsB,GAAG,SAASA,sBAAT,GAAkC;AAC3D,WAAO,CAAC,GAAGb,YAAY,CAACT,OAAjB,EAA0B,sBAA1B,EAAkD,2BAA2BoB,IAA7E,EAAmF;AAAE,uCAAiCC,OAAO,KAAK;AAA/C,KAAnF,EAA+IJ,SAA/I,CAAP;AACH,GAFD;;AAIA,MAAIM,wBAAwB,GAAG,SAASA,wBAAT,GAAoC;AAC/D,WAAO,CAAC,GAAGd,YAAY,CAACT,OAAjB,EAA0B,4BAA1B,EAAwD;AAC3D,6CAAuCqB,OAAO,KAAK;AADQ,KAAxD,CAAP;AAGH,GAJD;;AAMA,MAAIG,eAAe,GAAG,CAAC,GAAGX,gBAAgB,CAACb,OAArB,EAA8BD,KAA9B,CAAtB;AACA,MAAI0B,KAAK,GAAG;AAAEC,IAAAA,KAAK,EAAEF,eAAe,GAAG;AAA3B,GAAZ;AAEA,SAAOpB,OAAO,CAACJ,OAAR,CAAgB2B,aAAhB,CACH,KADG,EAEH;AACIV,IAAAA,SAAS,EAAEK,sBAAsB,EADrC;AAEI,qBAAiB,GAFrB;AAGI,qBAAiB,KAHrB;AAII,qBAAiBE,eAJrB;AAKII,IAAAA,IAAI,EAAE,aALV;AAMIV,IAAAA,KAAK,EAAEA;AANX,GAFG,EAUHd,OAAO,CAACJ,OAAR,CAAgB2B,aAAhB,CACI,MADJ,EAEI;AAAEV,IAAAA,SAAS,EAAEM,wBAAwB,EAArC;AAAyCL,IAAAA,KAAK,EAAEO;AAAhD,GAFJ,EAGIrB,OAAO,CAACJ,OAAR,CAAgB2B,aAAhB,CAA8BhB,eAAe,CAACX,OAA9C,EAAuD;AAAE6B,IAAAA,IAAI,EAAEV;AAAR,GAAvD,CAHJ,CAVG,CAAP;AAgBH;;AAEDlB,WAAW,CAAC6B,SAAZ,GAAwB;AACpB;AACA/B,EAAAA,KAAK,EAAEQ,WAAW,CAACP,OAAZ,CAAoB+B,MAFP;;AAGpB;AACJ;AACIX,EAAAA,IAAI,EAAEb,WAAW,CAACP,OAAZ,CAAoBgC,KAApB,CAA0B,CAAC,SAAD,EAAY,OAAZ,EAAqB,QAArB,EAA+B,OAA/B,CAA1B,CALc;;AAMpB;AACAX,EAAAA,OAAO,EAAEd,WAAW,CAACP,OAAZ,CAAoBgC,KAApB,CAA0B,CAAC,OAAD,EAAU,SAAV,CAA1B,CAPW;;AAQpB;AACAb,EAAAA,aAAa,EAAEZ,WAAW,CAACP,OAAZ,CAAoBiC,MATf;;AAUpB;AACAhB,EAAAA,SAAS,EAAEV,WAAW,CAACP,OAAZ,CAAoBiC,MAXX;;AAYpB;AACAf,EAAAA,KAAK,EAAEX,WAAW,CAACP,OAAZ,CAAoBkC;AAbP,CAAxB;AAgBAjC,WAAW,CAACkC,YAAZ,GAA2B;AACvBpC,EAAAA,KAAK,EAAE,CADgB;AAEvBqB,EAAAA,IAAI,EAAE,QAFiB;AAGvBC,EAAAA,OAAO,EAAE,OAHc;AAIvBF,EAAAA,aAAa,EAAE,EAJQ;AAKvBF,EAAAA,SAAS,EAAEmB,SALY;AAMvBlB,EAAAA,KAAK,EAAEkB;AANgB,CAA3B","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = ProgressBar;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _AssistiveText = require('./../AssistiveText');\n\nvar _AssistiveText2 = _interopRequireDefault(_AssistiveText);\n\nvar _normalizeValue = require('./normalizeValue');\n\nvar _normalizeValue2 = _interopRequireDefault(_normalizeValue);\n\nrequire('./styles.css');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Progress bar component communicates to the user the progress of a particular process.\n */\nfunction ProgressBar(props) {\n    var className = props.className,\n        style = props.style,\n        assistiveText = props.assistiveText,\n        value = props.value,\n        size = props.size,\n        variant = props.variant;\n\n\n    var getContainerClassNames = function getContainerClassNames() {\n        return (0, _classnames2.default)('rainbow-progress-bar', 'rainbow-progress-bar--' + size, { 'rainbow-progress-bar--success': variant === 'success' }, className);\n    };\n\n    var getProgressBarClassNames = function getProgressBarClassNames() {\n        return (0, _classnames2.default)('rainbow-progress-bar_value', {\n            'rainbow-progress-bar_value--success': variant === 'success'\n        });\n    };\n\n    var normalizedValue = (0, _normalizeValue2.default)(value);\n    var WIDTH = { width: normalizedValue + '%' };\n\n    return _react2.default.createElement(\n        'div',\n        {\n            className: getContainerClassNames(),\n            'aria-valuemin': '0',\n            'aria-valuemax': '100',\n            'aria-valuenow': normalizedValue,\n            role: 'progressbar',\n            style: style\n        },\n        _react2.default.createElement(\n            'span',\n            { className: getProgressBarClassNames(), style: WIDTH },\n            _react2.default.createElement(_AssistiveText2.default, { text: assistiveText })\n        )\n    );\n}\n\nProgressBar.propTypes = {\n    /** The percentage value of the progress bar. It must be between 0 and 100. */\n    value: _propTypes2.default.number,\n    /** The size of the progress bar. Valid values are x-small, small, medium, and large.\n     * The default value is medium. */\n    size: _propTypes2.default.oneOf(['x-small', 'small', 'medium', 'large']),\n    /** The variant of the progress bar. Valid values are brand and success. */\n    variant: _propTypes2.default.oneOf(['brand', 'success']),\n    /** A description for assistive sreen readers. */\n    assistiveText: _propTypes2.default.string,\n    /** A CSS class for the outer element, in addition to the component's base classes. */\n    className: _propTypes2.default.string,\n    /** An object with custom style applied to the outer element. */\n    style: _propTypes2.default.object\n};\n\nProgressBar.defaultProps = {\n    value: 0,\n    size: 'medium',\n    variant: 'brand',\n    assistiveText: '',\n    className: undefined,\n    style: undefined\n};"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Marian\\\\Desktop\\\\My work\\\\Licenta\\\\Safe_Office\\\\frontend\\\\src\\\\screens\\\\MyNotes\\\\MyNotes.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { Accordion, Badge, Button, Card } from \"react-bootstrap\";\nimport MainScreen from \"../../components/MainScreen\";\nimport { Link } from \"react-router-dom\";\nimport ReactMarkdown from \"react-markdown\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { deleteNoteAction, listNotes } from \"../../actions/notesActions\";\nimport Loading from \"../../components/Loading\";\nimport ErrorMessage from \"../../components/ErrorMessage\";\n\nfunction MyNotes({\n  history,\n  search\n}) {\n  _s();\n\n  const dispatch = useDispatch();\n  const noteList = useSelector(state => state.noteList);\n  const {\n    loading,\n    error,\n    notes\n  } = noteList; // const filteredNotes = notes.filter((note) =>\n  //   note.title.toLowerCase().includes(search.toLowerCase())\n  // );\n\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  const noteDelete = useSelector(state => state.noteDelete);\n  const {\n    loading: loadingDelete,\n    error: errorDelete,\n    success: successDelete\n  } = noteDelete;\n  const noteCreate = useSelector(state => state.noteCreate);\n  const {\n    success: successCreate\n  } = noteCreate;\n  const noteUpdate = useSelector(state => state.noteUpdate);\n  const {\n    success: successUpdate\n  } = noteUpdate;\n  useEffect(() => {\n    dispatch(listNotes());\n\n    if (!userInfo) {\n      history.push(\"/\");\n    }\n  }, [dispatch, history, userInfo, successDelete, successCreate, successUpdate]);\n\n  const deleteHandler = id => {\n    if (window.confirm(\"Are you sure?\")) {\n      dispatch(deleteNoteAction(id));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n      children: \"Coffee\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      children: \"Tea\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      children: \"Milk\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 3\n  }, this);\n}\n\n_s(MyNotes, \"0+T1O8sXS5MYgAhGr/zGeOdS5aI=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = MyNotes;\nexport default MyNotes;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyNotes\");","map":{"version":3,"sources":["C:/Users/Marian/Desktop/My work/Licenta/Safe_Office/frontend/src/screens/MyNotes/MyNotes.js"],"names":["React","useEffect","Accordion","Badge","Button","Card","MainScreen","Link","ReactMarkdown","useDispatch","useSelector","deleteNoteAction","listNotes","Loading","ErrorMessage","MyNotes","history","search","dispatch","noteList","state","loading","error","notes","userLogin","userInfo","noteDelete","loadingDelete","errorDelete","success","successDelete","noteCreate","successCreate","noteUpdate","successUpdate","push","deleteHandler","id","window","confirm"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,EAAoBC,KAApB,EAA2BC,MAA3B,EAAmCC,IAAnC,QAA+C,iBAA/C;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AAEA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,gBAAT,EAA2BC,SAA3B,QAA4C,4BAA5C;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;;AAEA,SAASC,OAAT,CAAiB;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAjB,EAAsC;AAAA;;AACpC,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AAEA,QAAMU,QAAQ,GAAGT,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACD,QAAlB,CAA5B;AACA,QAAM;AAAEE,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA4BJ,QAAlC,CAJoC,CAMpC;AACA;AACA;;AAEA,QAAMK,SAAS,GAAGd,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACI,SAAlB,CAA7B;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAeD,SAArB;AAEA,QAAME,UAAU,GAAGhB,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACM,UAAlB,CAA9B;AACA,QAAM;AACJL,IAAAA,OAAO,EAAEM,aADL;AAEJL,IAAAA,KAAK,EAAEM,WAFH;AAGJC,IAAAA,OAAO,EAAEC;AAHL,MAIFJ,UAJJ;AAMA,QAAMK,UAAU,GAAGrB,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACW,UAAlB,CAA9B;AACA,QAAM;AAAEF,IAAAA,OAAO,EAAEG;AAAX,MAA6BD,UAAnC;AAEA,QAAME,UAAU,GAAGvB,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACa,UAAlB,CAA9B;AACA,QAAM;AAAEJ,IAAAA,OAAO,EAAEK;AAAX,MAA6BD,UAAnC;AAEAhC,EAAAA,SAAS,CAAC,MAAM;AACdiB,IAAAA,QAAQ,CAACN,SAAS,EAAV,CAAR;;AACA,QAAI,CAACa,QAAL,EAAe;AACbT,MAAAA,OAAO,CAACmB,IAAR,CAAa,GAAb;AACD;AACF,GALQ,EAKN,CACDjB,QADC,EAEDF,OAFC,EAGDS,QAHC,EAIDK,aAJC,EAKDE,aALC,EAMDE,aANC,CALM,CAAT;;AAcA,QAAME,aAAa,GAAIC,EAAD,IAAQ;AAC5B,QAAIC,MAAM,CAACC,OAAP,CAAe,eAAf,CAAJ,EAAqC;AACnCrB,MAAAA,QAAQ,CAACP,gBAAgB,CAAC0B,EAAD,CAAjB,CAAR;AACD;AACF,GAJD;;AAMA,sBACA;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAOD;;GArDQtB,O;UACUN,W,EAEAC,W,EAOCA,W,EAGCA,W,EAOAA,W,EAGAA,W;;;KAvBZK,O;AAuDT,eAAeA,OAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { Accordion, Badge, Button, Card } from \"react-bootstrap\";\r\nimport MainScreen from \"../../components/MainScreen\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ReactMarkdown from \"react-markdown\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { deleteNoteAction, listNotes } from \"../../actions/notesActions\";\r\nimport Loading from \"../../components/Loading\";\r\nimport ErrorMessage from \"../../components/ErrorMessage\";\r\n\r\nfunction MyNotes({ history, search }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const noteList = useSelector((state) => state.noteList);\r\n  const { loading, error, notes } = noteList;\r\n\r\n  // const filteredNotes = notes.filter((note) =>\r\n  //   note.title.toLowerCase().includes(search.toLowerCase())\r\n  // );\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const noteDelete = useSelector((state) => state.noteDelete);\r\n  const {\r\n    loading: loadingDelete,\r\n    error: errorDelete,\r\n    success: successDelete,\r\n  } = noteDelete;\r\n\r\n  const noteCreate = useSelector((state) => state.noteCreate);\r\n  const { success: successCreate } = noteCreate;\r\n\r\n  const noteUpdate = useSelector((state) => state.noteUpdate);\r\n  const { success: successUpdate } = noteUpdate;\r\n\r\n  useEffect(() => {\r\n    dispatch(listNotes());\r\n    if (!userInfo) {\r\n      history.push(\"/\");\r\n    }\r\n  }, [\r\n    dispatch,\r\n    history,\r\n    userInfo,\r\n    successDelete,\r\n    successCreate,\r\n    successUpdate,\r\n  ]);\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm(\"Are you sure?\")) {\r\n      dispatch(deleteNoteAction(id));\r\n    }\r\n  };\r\n\r\n  return (\r\n  <ul>\r\n    <li>Coffee</li>\r\n    <li>Tea</li>\r\n    <li>Milk</li>\r\n  </ul> \r\n  );\r\n}\r\n\r\nexport default MyNotes;\r\n"]},"metadata":{},"sourceType":"module"}